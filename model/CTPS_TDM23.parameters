	Section = "Primary Inputs|Networks and Zonal Data"
	
        Args.[Highway Input] = {
            "Type":"File",
            "Caption":"Roadway DBD File",
            "Description":"highway geodb filename",
            "Value":null
        }
        Args.[Transit Input] = {
            "Type":"File",
            "Caption":"Transit RTS File",
            "Description":"transit rts filename",
            "Value":null
        }
        Args.[Turn Penalties] = {
            "Type":"File",
            "Description":"turn penalty filename",
            "Value":null
        }
        Args.[Init Speeds - am] = {
            "Type":"File",
            "Description":"am peak speeds",
            "Value":null
        }
        Args.[Init Speeds - md] = {
            "Type":"File",
            "Description":"midday speeds",
            "Value":null
        }
        Args.[Init PnR Demand - am] = {
            "Type":"File",
            "Description":"am peak PnR Demand",
            "Value":null
        }
        Args.[Transit Mode Table] = {
            "Type":"File",
            "Description":"transit mode filenames",
            "Value":null
        }
        Args.Parking = {
            "Type":"File",
            "Caption":"Parking Costs",
            "Value":"%InputFolder%\\zonal\\parking_v20221007.csv"
        }
        Args.[NonMotorized Links] = {
            "Type":"File",
            "Caption":"Non-Motorized DBD File",
            "Description":"OSM network with walk/bike links",
            "Value":"%InputFolder%\\networks\\osm_20220506\\osm_20220506.dbd"
        }
        Args.[Walk Bike Conditions] = {
            "Type":"File",
            "Caption":"Intersection Densities",
            "Value":"%InputFolder%\\zonal\\walkbike_v20220411.csv"
        }
	
	Section = "Primary Inputs|Socio-Economic and Trips"
	
        Args.[Population MA] = {
            "Type":"File",
            "Caption":"MA Population",
            "Description":"UrbanSim/PopulationSim Population File",
            "Value":null
        }
        Args.[Population NHRI] = {
            "Type":"File",
            "Caption":"NH and RI Population",
            "Description":"UrbanSim/PopulationSim Population File",
            "Value":null
        }
        Args.[Employment MA] = {
            "Type":"File",
            "Caption":"MA Employment",
            "Description":"UrbanSim/PopulationSim block-level employment file",
            "Value":null
        }
        Args.[Employment NHRI] = {
            "Type":"File",
            "Caption":"NH and RI Employment",
            "Description":"UrbanSim/PopulationSim block-level employment file",
            "Value":null
        }
        Args.[School Enrollment] = {
            "Type":"File",
            "Caption":"School and University Enrollment",
            "Value":"%InputFolder%\\zonal\\enroll_v20221028.csv"
        }
        Args.[Special Generators] = {
            "Type":"File",
            "Value":null
        }
        Args.ext_station_volumes = {
            "Type":"File",
            "Caption":"Base External Station Volumes",
            "Description":"Volumes by external station split by vehicle type",
            "Value":"%InputFolder%\\zonal\\ext_trips_v20221018.csv"
        }
        Args.ext_vol_growth = {
            "Type":"double",
            "Caption":"External Volume Growth",
            "Description":"Growth percentage from base volumes",
            "Value":null
        }
        Args.[Daily air trips] = {
            "Type":"int",
            "Caption":"Airport Ground Access Trips",
            "Description":"Number of air travelers (excluding transfers)",
            "Value":null
        }
	
	Section = "Primary Inputs|Run Mode"
	
        Args.MaxIterations = {
            "Type":"int",
            "Caption":"Maximum Speed Feedback Iterations",
            "Value":4
        }
        Args.FeedbackConvergence = {
            "Type":"double",
            "Caption":"Speed Feedback PRMSE Threshold (%)",
            "Value":1
        }
        Args.TransitParking = {
            "Type":"string",
            "Description":"PnR Constraint Control",
            "Style":"PnRCnstrn",
            "Value":"Dynamic Shadow Costs"
        }
        Args.cnstr_source = {
            "Type":"folder",
            "Caption":"Assignment Only Source Scenario Folder",
            "Description":"Location of Constrained Run Files",
            "Value":null
        }
	
	Section = "Demand|Vehicle Availability"
	
        Args.va_spec = {
            "Type":"File",
            "Caption":"Vehicle Availability Parameters",
            "Value":"%InputFolder%\\params\\va_mnl_params_20221013.yaml"
        }
	
	Section = "Demand|Work from Home|WFH Mode"
	
        Args.[WFH Mode] = {
            "Type":"string",
            "Caption":"WFH Mode",
            "Style":"WfhType",
            "Value":"No WFH"
        }
	
	Section = "Demand|Work from Home|Workers"
	
        Args.[Regional Default WFH Rate] = {
            "Type":"double",
            "Caption":"Regional Default WFH Rate",
            "Description":"Regional Default Remote Rate of Workers",
            "Value":0.21
        }
        Args.[WFH Rate by State] = {
            "Type":"array",
            "Caption":"WFH Rate by State",
            "Style":"WfhStateStyle",
            "Value":{
                {"MA",null,null},
                {"NH",null,null},
                {"RI",1,0.16}}
        }
        Args.[WFH Rate by MPO] = {
            "Type":"array",
            "Caption":"WFH Rate by MPO",
            "Style":"WfhMpoStyle",
            "Value":{
                {"BRMPO",1,0.25},
                {"BRPC",1,0.05},
                {"CCC",1,0.1},
                {"CMRPC",null},
                {"FRCOG",1,0.13},
                {"MRPC",null,null},
                {"MVC",1,0.1},
                {"MVPC",null,null},
                {"NMCOG",null,null},
                {"NPEDC",1,0.02},
                {"OCPC",1,0.24},
                {"PVPC",null,null},
                {"SRPEDD",null,null}}
        }
        Args.[WFH Rate by Other Town_Bool] = {
            "Type":"Boolean",
            "Caption":"Some towns/cities have different WFH rates from the regional/state/MPO defaults.",
            "Value":0
        }
        Args.[WFH Rate by Other Town] = {
            "Type":"File",
            "Caption":"WFH Rates of these Towns/Cities: ",
            "Value":null
        }
	
	Section = "Demand|Work from Home|Employment"
	
        Args.[Remote Level by Job Segment] = {
            "Type":"array",
            "Caption":"Remote Level by Job Sectors",
            "Style":"WfhJobStyle",
            "Value":{
                {"1_constr",0.08},
                {"2_eduhlth",0.18},
                {"3_finance",0.39},
                {"4_public",0.32},
                {"5_info",0.43},
                {"6_ret_leis",0.1},
                {"7_manu",0.2},
                {"8_other",0.08},
                {"9_profbus",0.35},
                {"10_ttu",0.12}}
        }
	
	Section = "Demand|Trip Generation"
	
        Args.[Production Coefficient] = {
            "Type":"File",
            "Description":"Calibrated coefficients for household and worker production estimation",
            "Value":"%InputFolder%\\params\\trip_prod_20230428.yaml"
        }
        Args.[Attraction Coefficient] = {
            "Type":"File",
            "Description":"Calibrated coefficients for block level Attraction estimation",
            "Value":"%InputFolder%\\params\\trip_attr_20221008.yaml"
        }
        Args.hbu_trip_gen = {
            "Type":"File",
            "Caption":"HBU Trip Generation Coefficients",
            "Description":"Calibrated coefficients for taz-level trip generation estimation",
            "Value":"%InputFolder%\\params\\hbu_trip_rates_20221027.yaml"
        }
        Args.[Truck Generation] = {
            "Type":"File",
            "Description":"Calibrated coefficients for block level Attraction estimation",
            "Value":"%InputFolder%\\params\\truck_trip_rates_20221006.yaml"
        }
        Args.[HH Income Segments] = {
            "Type":"File",
            "Caption":"Household Size Income Categories",
            "Value":"%InputFolder%\\params\\hh_income_categories_20220704.csv"
        }
        Args.[Income Level across Job Sectors] = {
            "Type":"File",
            "Description":"Proportions of income groups across ten major employment sectors",
            "Value":"%InputFolder%\\params\\employment_income_20221008.csv"
        }
        Args.[WFH HBO] = {
            "Type":"hidden",
            "Caption":"Increase WFH HBO Trips - PLACEHOLDER",
            "Description":"Increase HBO trips for Non-Commuting Workers",
            "Value":0
        }
        Args.PeakNonpeak = {
            "Type":"array",
            "Caption":"Peak/Non-Peak factor",
            "Style":"PeakNonpkClassStyle",
            "Value":{
                {"Peak",0.692,0.486,0.509,0.746,0.348,0.446},
                {"Non-Peak",0.308,0.514,0.491,0.254,0.652,0.554}}
        }
        Args.hbu_pknp = {
            "Type":"array",
            "Caption":"HBU Peak/Non-Peak factor",
            "Style":"HBUPkNpStyle",
            "Value":{
                {"Peak",0.398},
                {"Non-Peak",0.602}}
        }
	
	Section = "Demand|Airport Ground Access"
	
        Args.[Airport Segments] = {
            "Type":"array",
            "Caption":"Airport Trip Segments and Shares",
            "Style":"AirSegmentArrayStyle",
            "Value":{
                {"resb","Resident Business",0.19},
                {"resl","Resident Leisure",0.44},
                {"visb","Visitor Businsess",0.18},
                {"visl","Visitor Leisure",0.19}}
        }
        Args.[Airport Generation] = {
            "Type":"File",
            "Description":"Calibrated coefficients for block level production",
            "Value":"%InputFolder%\\params\\air_trip_rates_20221214.yaml"
        }
        Args.[Airport Externals] = {
            "Type":"double",
            "Description":"Share of air travelers traveling outside the model region",
            "Value":0.1
        }
        Args.[Airport Externals Occupancy] = {
            "Type":"double",
            "Description":"Vehicle occupancy of airport trips outside of model region",
            "Value":1.6
        }
        Args.AirPeakNonpeak = {
            "Type":"array",
            "Caption":"Airport PeakNonpeak factor",
            "Style":"AirportPkNpStyle",
            "Value":{
                {"Peak",0.38,0.39,0.45,0.39},
                {"Non-Peak",0.62,0.61,0.55,0.61}}
        }
        Args.air_tt = {
            "Type":"array",
            "Caption":"Airport Terminal Times",
            "Style":"AirModeAltArrayStyle",
            "Value":{
                {"dp","Drive and Park",10},
                {"rc","Rental Car",18},
                {"pu","Pick up / Drop off",0},
                {"tw","Transit Walk",0},
                {"ta","Transit Auto",0},
                {"lx","Logan Express",0},
                {"rs","Ride Source",10}}
        }
        Args.rs_fee = {
            "Type":"double",
            "Caption":"Ride Source Mode Airport Access Fee",
            "Description":"Included in ride-source mode costs",
            "Value":2.77
        }
        Args.[airport parking] = {
            "Type":"array",
            "Caption":"airport parking cost daily",
            "Style":"AirParkCost",
            "Value":{
                {"resb",26.6},
                {"resl",24.6}}
        }
        Args.Airport_Occupancies = {
            "Type":"array",
            "Caption":"Auto Occupancies - Airport Trips",
            "Style":"AirportOccupancyArrayStyle",
            "Value":{
                {"resb",1.3,1.9,1.7,1.9},
                {"resl",2.5,2.5,2.5,2.3},
                {"visb",1,1.9,3.2,2.2},
                {"visl",1,3.3,2.6,2.9}}
        }
	
	Section = "Demand|Trip Distribution|Gravity"
	
        Args.[Gravity Dist] = {
            "Type":"array",
            "Caption":"Gravity Distribution Parameters",
            "Style":"GravDistStyle",
            "Value":{
                {"hbsc-all","Production","Exponential","sr_time","0.238"},
                {"hbu-all","Attraction","Exponential","sr_time","0.07"},
                {"spcgen-hbsr","Attraction","Exponential","dist","0.2"},
                {"spcgen-hbpb","Attraction","Exponential","dist","0.2"},
                {"air-resb","Attraction","Exponential","dist","0.019"},
                {"air-resl","Attraction","Exponential","dist","0.015"},
                {"air-visb","Attraction","Exponential","dist","0.045"},
                {"air-visl","Attraction","Exponential","dist","0.019"},
                {"trk-ltrk","Doubly","Exponential","sr_time","0.2"},
                {"trk-mtrk","Doubly","Gamma","dist","1.5,-0.05,0.13"},
                {"trk-htrk","Doubly","Gamma","dist","1,-0.01,0.065"},
                {"ext_ei-auto","Production","Exponential","dist","0.07"},
                {"ext_ei-mtrk","Production","Exponential","dist","0.06"},
                {"ext_ei-htrk","Production","Exponential","dist","0.032"},
                {"ext_eair-auto","Doubly","Exponential","dist","0.07"},
                {"rs-nonrev-all","Doubly","Exponential","sr_time","0.18"}}
        }
        Args.ext_ext_seed = {
            "Type":"File",
            "Caption":"External to External Distribution",
            "Description":"Seed matrix for ee distribution",
            "Value":"%InputFolder%\\zonal\\ee_seed_v20220915.mtx"
        }
	
	Section = "Demand|Trip Distribution|HBW"
	
        Args.HBWDestUtility = {
            "Type":"array",
            "Caption":"HBW location utility",
            "Style":"DestUtility",
            "Value":{
                {"Logsum","MCLogsum.Root",null,1},
                {"Distance","SkimRD.dist","ZV",-0.565},
                {"Distance","SkimRD.dist","IV",-0.55},
                {"Distance","SkimRD.dist","SV",-0.535},
                {"Distance (> 2.5 miles)","max(SkimRD.dist - 2.5, 0)",null,0.3},
                {"Distance (> 5.0 miles)","max(SkimRD.dist - 5.0, 0)",null,0.15},
                {"Distance (> 15.0 miles)","max(SkimRD.dist - 15.0, 0)",null,0.02},
                {"Distance (> 20.0 miles)","max(SkimRD.dist - 20.0, 0)",null,0.005},
                {"Intrazonal","IntraZonal.IZ","ZV",0.5},
                {"Intrazonal","IntraZonal.IZ","IV",0.4},
                {"Intrazonal","IntraZonal.IZ","SV",0.29},
                {"Walk to transit available","SkimTW.ivtt > 0",null,0.263},
                {"Size term","log(Attractions.[Purpose].D)",null,1}}
        }
	
	Section = "Demand|Trip Distribution|HBPB"
	
        Args.HBPBDestUtility = {
            "Type":"array",
            "Caption":"HBPB location utility",
            "Style":"DestUtility",
            "Value":{
                {"Logsum","MCLogsum.Root",null,1},
                {"Distance","SkimRD.dist","ZV",-1},
                {"Distance","SkimRD.dist","IV",-0.955},
                {"Distance","SkimRD.dist","SV",-0.955},
                {"Distance (> 2.5 miles)","max(SkimRD.dist - 2.5, 0)",null,0.55},
                {"Distance (> 5.0 miles)","max(SkimRD.dist - 5.0, 0)",null,0.15},
                {"Distance (> 10.0 miles)","max(SkimRD.dist - 10.0, 0)",null,0.1},
                {"Distance (> 20.0 miles)","max(SkimRD.dist - 20.0, 0)",null,0.1},
                {"Distance (> 30.0 miles)","max(SkimRD.dist - 30.0, 0)",null,0.01},
                {"Intrazonal","IntraZonal.IZ","ZV",-0.15},
                {"Intrazonal","IntraZonal.IZ","IV",-0.2},
                {"Intrazonal","IntraZonal.IZ","SV",-0.4},
                {"Walk to transit available","SkimTW.ivtt > 0",null,0},
                {"Size term","log(Attractions.[Purpose].D)",null,1}}
        }
	
	Section = "Demand|Trip Distribution|HBSR"
	
        Args.HBSRDestUtility = {
            "Type":"array",
            "Caption":"HBSR location utility",
            "Style":"DestUtility",
            "Value":{
                {"Logsum","MCLogsum.Root",null,1},
                {"Distance","SkimRD.dist","ZV",-0.79},
                {"Distance","SkimRD.dist","IV",-0.78},
                {"Distance","SkimRD.dist","SV",-0.77},
                {"Distance (> 2.5 miles)","max(SkimRD.dist - 2.5, 0)",null,0.4},
                {"Distance (> 5.0 miles)","max(SkimRD.dist - 5.0, 0)",null,0.1},
                {"Distance (> 10.0 miles)","max(SkimRD.dist - 10.0, 0)",null,0},
                {"Distance (> 15.0 miles)","max(SkimRD.dist - 15.0, 0)",null,0.1},
                {"Distance (> 20.0 miles)","max(SkimRD.dist - 20.0, 0)",null,0.16},
                {"Distance (> 40.0 miles)","max(SkimRD.dist - 40.0, 0)",null,0},
                {"Intrazonal","IntraZonal.IZ","ZV",0.1},
                {"Intrazonal","IntraZonal.IZ","IV",0},
                {"Intrazonal","IntraZonal.IZ","SV",-0.15},
                {"Walk to transit available","SkimTW.ivtt > 0",null,0},
                {"Size term","log(Attractions.[Purpose].D)",null,1}}
        }
	
	Section = "Demand|Trip Distribution|NHBW"
	
        Args.NHBWDestUtility = {
            "Type":"array",
            "Caption":"NHBW location utility",
            "Style":"DestUtility",
            "Value":{
                {"Logsum","MCLogsum.Root",null,1},
                {"Distance","SkimRD.dist",null,-0.49},
                {"Distance (> 5.0 miles)","max(SkimRD.dist - 5.0, 0)",null,0.36},
                {"Distance (> 10.0 miles)","max(SkimRD.dist - 10.0, 0)",null,0.042},
                {"Distance (> 15.0 miles)","max(SkimRD.dist - 15.0, 0)",null,0.038},
                {"Distance (> 20.0 miles)","max(SkimRD.dist - 20.0, 0)",null,-0.02},
                {"Intrazonal","IntraZonal.IZ",null,0.55},
                {"Walk to transit available","SkimTW.ivtt > 0",null,0},
                {"Size term","log(Attractions.[Purpose].D)",null,1}}
        }
	
	Section = "Demand|Trip Distribution|NHBNW"
	
        Args.NHBNWDestUtility = {
            "Type":"array",
            "Caption":"NHBNW location utility",
            "Style":"DestUtility",
            "Value":{
                {"Logsum","MCLogsum.Root",null,1},
                {"Distance","SkimRD.dist",null,-0.52},
                {"Distance (> 5.0 miles)","max(SkimRD.dist - 5.0, 0)",null,0.25},
                {"Distance (> 10.0 miles)","max(SkimRD.dist - 10.0, 0)",null,0.15},
                {"Distance (> 15.0 miles)","max(SkimRD.dist - 15.0, 0)",null,0.01},
                {"Distance (> 20.0 miles)","max(SkimRD.dist - 20.0, 0)",null,0.04},
                {"Intrazonal","IntraZonal.IZ",null,0.45},
                {"Walk to transit available","SkimTW.ivtt > 0",null,0},
                {"Size term","log(Attractions.[Purpose].D)",null,1}}
        }
	
	Section = "Demand|Mode Choice|Nesting Structures"
	
        Args.[HB Full Alt Nests] = {
            "Type":"array",
            "Caption":"Nesting structure for HBW, HBU, HBSR and HBPB",
            "Style":"NestingStructure",
            "Value":{
                {"Root","Auto, NonMotor, Transit, rs",1},
                {"Auto","da, s2, s3",0.7},
                {"NonMotor","wk, bk",0.7},
                {"Transit","ta, tw",0.7}}
        }
        Args.[HBSC Nests] = {
            "Type":"array",
            "Caption":"Nesting structure for HBSC",
            "Style":"NestingStructure",
            "Value":{
                {"Root","Auto, NonMotor, Transit, rs, sb",1},
                {"Auto","da, s2, s3",0.637},
                {"NonMotor","wk, bk",0.7},
                {"Transit","ta, tw",0.7}}
        }
        Args.[NHBW NHBNW Nests] = {
            "Type":"array",
            "Caption":"Nesting structure for NHBW and NHBNW",
            "Style":"NestingStructure",
            "Value":{
                {"Root","Auto, NonMotor, tw, rs",1},
                {"Auto","da, s2, s3",0.7},
                {"NonMotor","wk, bk",0.7}}
        }
        Args.[air_resb Nests] = {
            "Type":"array",
            "Caption":"Nesting structure for Airport Ground Access- resident business",
            "Style":"NestingStructure",
            "Value":{
                {"Root","Personal Auto, Transit, rs",1},
                {"Personal Auto","dp, pu",0.2},
                {"Transit","tw, Transit_Auto",0.7},
                {"Transit_Auto","ta, lx",0.5}}
        }
        Args.[air_resl Nests] = {
            "Type":"array",
            "Caption":"Nesting structure for Airport Ground Access- resident leisure",
            "Style":"NestingStructure",
            "Value":{
                {"Root","Personal Auto, Transit, rs",1},
                {"Personal Auto","dp, pu",0.161},
                {"Transit","tw, Transit_Auto",0.7},
                {"Transit_Auto","ta, lx",0.5}}
        }
        Args.[air_visb Nests] = {
            "Type":"array",
            "Caption":"Nesting structure for Airport Ground Access- visitor business",
            "Style":"NestingStructure",
            "Value":{
                {"Root","Personal Auto, Transit, rs",1},
                {"Personal Auto","rc, pu",0.7},
                {"Transit","tw, Transit_Auto",0.7},
                {"Transit_Auto","ta, lx",0.5}}
        }
        Args.[air_visl Nests] = {
            "Type":"array",
            "Caption":"Nesting structure for Airport Ground Access- visitor leisure",
            "Style":"NestingStructure",
            "Value":{
                {"Root","Personal Auto, Transit, rs",1},
                {"Personal Auto","rc, pu",0.7},
                {"Transit","tw, Transit_Auto",0.7},
                {"Transit_Auto","ta, lx",0.5}}
        }
	
	Section = "Demand|Mode Choice|Utilities|HBW"
	
        Args.HBW_Utility = {
            "Type":"array",
            "Caption":"Utility equations for HBW",
            "Style":"ModeUtility1",
            "Value":{
                {"ASC","Constant",null,null,-1.138,-2.042,-3.12,-3.649,-2.268,-2.462,-2.25},
                {"Sufficient vehicles","Constant","SV",0.265,-1.36,-1.72,null,null,-0.8155,null,null},
                {"Insufficient vehicles","Constant","IV",null,null,null,0.825,0.825,0.5095,0.35,null},
                {"Zero vehicles","Constant","ZV",-2.35,null,null,3.19,2.44,3.81,0.25,3},
                {"IVTT","SkimRD.da_time",null,-0.0223,null,null,null,null,null,null,null},
                {"IVTT","SkimRD.sr_time",null,null,-0.0223,-0.0223,null,null,null,null,-0.0223},
                {"IVTT","SkimTW.ivtt",null,null,null,null,null,null,-0.0223,null,null},
                {"IVTT","SkimTA.ivtt",null,null,null,null,null,null,null,-0.0223,null},
                {"OVTT","TAZ.terminal_time_p.O + TAZ.terminal_time_a.D",null,-0.0546,-0.0546,-0.0546,null,null,null,null,null},
                {"OVTT","TAZ.rs_wait_time.O",null,null,null,null,null,null,null,null,-0.0546},
                {"OVTT","SkimNM.dist / {WLK_MPM}",null,null,null,null,-0.0546,null,null,null,null},
                {"OVTT","SkimNM.dist / {BK_MPM}",null,null,null,null,null,-0.0546,null,null,null},
                {"OVTT","SkimTW.iwait + SkimTW.xwait + SkimTW.walk",null,null,null,null,null,null,-0.0546,null,null},
                {"OVTT","TAZ.terminal_time_p.O",null,null,null,null,null,null,null,-0.0546,null},
                {"OVTT","SkimTA.iwait + SkimTA.xwait + SkimTA.walk + SkimTA.dtime",null,null,null,null,null,null,null,-0.0546,null},
                {"Cost","SkimRD.da_toll + SkimRD.dist * {AOC} + TAZ.hbw_pcost.D",null,-0.0681,null,null,null,null,null,null,null},
                {"Cost","(SkimRD.sr_toll + TAZ.hbw_pcost.D) / {S2_OCC} + SkimRD.dist * {AOC}",null,null,-0.0681,null,null,null,null,null,null},
                {"Cost","(SkimRD.sr_toll + TAZ.hbw_pcost.D )/ {S3_OCC} + SkimRD.dist * {AOC}",null,null,null,-0.0681,null,null,null,null,null},
                {"Cost","SkimRD.sr_toll + SkimRD.rs_fare",null,null,null,null,null,null,null,null,-0.0681},
                {"Cost","SkimTW.fare",null,null,null,null,null,null,-0.0681,null,null},
                {"Cost","SkimTA.fare + SkimTA.auto_cost + SkimTA.ddist * {AOC}",null,null,null,null,null,null,null,-0.0681,null},
                {"Path","max((SkimTA.ddist / SkimRD.dist) - 0.5, 0)",null,null,null,null,null,null,null,-3,null},
                {"Short Distance","max(3 - SkimNM.dist, 0)",null,null,null,null,0.75,0.1,-1,null,null},
                {"Short Distance","max(20 - SkimRD.dist, 0)",null,null,null,null,null,null,null,-0.1,null},
                {"IntersectionDensity","TAZ.int_density.O",null,null,null,null,null,null,0.053,null,null},
                {"IntersectionDensity","TAZ.int_density.D",null,null,null,null,null,null,0.662,0.662,null},
                {"IntersectionDensity","TAZ.int_density.O + TAZ.int_density.D",null,null,null,null,0.353,0.353,null,null,null},
                {"CBD - Prod or Attr End","TAZ.access_density.O = 1 | TAZ.access_density.D = 1",null,null,null,null,null,null,0.6,0.6,null},
                {"CBD Dense Urban - Prod End","TAZ.access_density.O < 3",null,null,null,null,null,null,null,-0.5,null},
                {"Suburban Rural - Prod End","TAZ.access_density.O > 4",null,null,null,null,null,null,null,0.75,null},
                {"CBD Dense Urban - Attr End","TAZ.access_density.D < 3",null,null,null,null,null,null,0.55,1.542,null},
                {"CBD Dense Urban","TAZ.access_density.O < 3 & TAZ.access_density.D < 3",null,null,null,null,0.89,0.64,0.111,null,null},
                {"Urban","TAZ.access_density.O < 5 | TAZ.access_density.D < 5",null,null,null,null,null,null,0.375,null,null}}
        }
	
	Section = "Demand|Mode Choice|Utilities|HBPB"
	
        Args.HBPB_Utility = {
            "Type":"array",
            "Caption":"Utility equations for HBPB",
            "Style":"ModeUtility1",
            "Value":{
                {"ASC","Constant",null,null,-0.872,-1.24,-2.457,-3.82,-2.499997,-2.592998,-4.5},
                {"Sufficient vehicles","Constant","SV",0.565,null,null,null,null,-0.58208,null,null},
                {"Insufficient vehicles","Constant","IV",null,null,null,0.0654,0.0654,0.019685,null,null},
                {"Zero vehicles","Constant","ZV",-2.09,0.302,null,2.48,1.73,4.45,1.17,3},
                {"IVTT","SkimRD.da_time",null,-0.02,null,null,null,null,null,null,null},
                {"IVTT","SkimRD.sr_time",null,null,-0.02,-0.02,null,null,null,null,-0.02},
                {"IVTT","SkimTW.ivtt",null,null,null,null,null,null,-0.02,null,null},
                {"IVTT","SkimTA.ivtt",null,null,null,null,null,null,null,-0.02,null},
                {"OVTT","TAZ.terminal_time_p.O + TAZ.terminal_time_a.D",null,-0.0599,-0.0599,-0.0599,null,null,null,null,null},
                {"OVTT","TAZ.rs_wait_time.O",null,null,null,null,null,null,null,null,-0.0599},
                {"OVTT","SkimNM.dist / {WLK_MPM}",null,null,null,null,-0.0599,null,null,null,null},
                {"OVTT","SkimNM.dist / {BK_MPM}",null,null,null,null,null,-0.0599,null,null,null},
                {"OVTT","SkimTW.iwait + SkimTW.xwait + SkimTW.walk",null,null,null,null,null,null,-0.0599,null,null},
                {"OVTT","TAZ.terminal_time_p.O",null,null,null,null,null,null,null,-0.0599,null},
                {"OVTT","SkimTA.iwait + SkimTA.xwait + SkimTA.walk + SkimTA.dtime",null,null,null,null,null,null,null,-0.0599,null},
                {"Cost","SkimRD.da_toll + SkimRD.dist * {AOC} + TAZ.hbpb_pcost.D",null,-0.104,null,null,null,null,null,null,null},
                {"Cost","(SkimRD.sr_toll + TAZ.hbpb_pcost.D) / {S2_OCC} + SkimRD.dist * {AOC}",null,null,-0.104,null,null,null,null,null,null},
                {"Cost","(SkimRD.sr_toll + TAZ.hbpb_pcost.D )/ {S3_OCC} + SkimRD.dist * {AOC}",null,null,null,-0.104,null,null,null,null,null},
                {"Cost","SkimRD.sr_toll + SkimRD.rs_fare",null,null,null,null,null,null,null,null,-0.104},
                {"Cost","SkimTW.fare",null,null,null,null,null,null,-0.104,null,null},
                {"Cost","SkimTA.fare + SkimTA.auto_cost + SkimTA.ddist * {AOC}",null,null,null,null,null,null,null,-0.104,null},
                {"Path","max((SkimTA.ddist / SkimRD.dist) - 0.5, 0)",null,null,null,null,null,null,null,-3,null},
                {"Short Distance","max(3 - SkimNM.dist, 0)",null,null,null,null,0.75,0.1,-1,null,null},
                {"Short Distance","max(20 - SkimRD.dist, 0)",null,null,null,null,null,null,null,-0.1,null},
                {"IntersectionDensity","TAZ.int_density.D",null,null,null,null,null,null,0.347,0.347,null},
                {"IntersectionDensity","TAZ.int_density.O + TAZ.int_density.D",null,null,null,null,0.271,0.271,null,null,null},
                {"CBD - Prod or Attr End","TAZ.access_density.O = 1 | TAZ.access_density.D = 1",null,null,null,null,null,null,0.5,0.5,null},
                {"CBD Dense Urban - Prod End","TAZ.access_density.O < 3",null,null,null,null,null,null,null,-0.5,null},
                {"CBD Dense Urban - Attr End","TAZ.access_density.D < 3",null,null,null,null,null,null,1.098,1.228,null},
                {"CBD Dense Urban","TAZ.access_density.O < 3 & TAZ.access_density.D < 3",null,null,null,null,0.599,0.349,null,null,null}}
        }
	
	Section = "Demand|Mode Choice|Utilities|HBSR"
	
        Args.HBSR_Utility = {
            "Type":"array",
            "Caption":"Utility equations for HBSR",
            "Style":"ModeUtility1",
            "Value":{
                {"ASC","Constant",null,null,-0.717,-0.664,-1.934999,-2.85,-2.971,-2.286,-3.5},
                {"Sufficient vehicles","Constant","SV",0.341,null,null,null,null,-0.575722,null,null},
                {"Insufficient vehicles","Constant","IV",null,null,null,0.215,0.215,0.220024,null,null},
                {"Zero vehicles","Constant","ZV",-2.1,0.255,null,2.06,1.31,3.76,1.17,3},
                {"IVTT","SkimRD.da_time",null,-0.0172,null,null,null,null,null,null,null},
                {"IVTT","SkimRD.sr_time",null,null,-0.0172,-0.0172,null,null,null,null,-0.0172},
                {"IVTT","SkimTW.ivtt",null,null,null,null,null,null,-0.0172,null,null},
                {"IVTT","SkimTA.ivtt",null,null,null,null,null,null,null,-0.0172,null},
                {"OVTT","TAZ.terminal_time_p.O + TAZ.terminal_time_a.D",null,-0.0517,-0.0517,-0.0517,null,null,null,null,null},
                {"OVTT","TAZ.rs_wait_time.O",null,null,null,null,null,null,null,null,-0.0517},
                {"OVTT","SkimNM.dist / {WLK_MPM}",null,null,null,null,-0.0517,null,null,null,null},
                {"OVTT","SkimNM.dist / {BK_MPM}",null,null,null,null,null,-0.0517,null,null,null},
                {"OVTT","SkimTW.iwait + SkimTW.xwait + SkimTW.walk",null,null,null,null,null,null,-0.0517,null,null},
                {"OVTT","TAZ.terminal_time_p.O",null,null,null,null,null,null,null,-0.0517,null},
                {"OVTT","SkimTA.iwait + SkimTA.xwait + SkimTA.walk + SkimTA.dtime",null,null,null,null,null,null,null,-0.0517,null},
                {"Cost","SkimRD.da_toll + SkimRD.dist * {AOC} + TAZ.hbsr_pcost.D",null,-0.0901,null,null,null,null,null,null,null},
                {"Cost","(SkimRD.sr_toll + TAZ.hbsr_pcost.D) / {S2_OCC} + SkimRD.dist * {AOC}",null,null,-0.0901,null,null,null,null,null,null},
                {"Cost","(SkimRD.sr_toll + TAZ.hbsr_pcost.D )/ {S3_OCC} + SkimRD.dist * {AOC}",null,null,null,-0.0901,null,null,null,null,null},
                {"Cost","SkimRD.sr_toll + SkimRD.rs_fare",null,null,null,null,null,null,null,null,-0.0901},
                {"Cost","SkimTW.fare",null,null,null,null,null,null,-0.0901,null,null},
                {"Cost","SkimTA.fare + SkimTA.auto_cost + SkimTA.ddist * {AOC}",null,null,null,null,null,null,null,-0.0901,null},
                {"Path","max((SkimTA.ddist / SkimRD.dist) - 0.5, 0)",null,null,null,null,null,null,null,-3,null},
                {"Short Distance","max(3 - SkimNM.dist, 0)",null,null,null,null,0.75,0.1,-1,null,null},
                {"Short Distance","max(20 - SkimRD.dist, 0)",null,null,null,null,null,null,null,-0.1,null},
                {"IntersectionDensity","TAZ.int_density.D",null,null,null,null,null,null,0.383,0.383,null},
                {"IntersectionDensity","TAZ.int_density.O + TAZ.int_density.D",null,null,null,null,0.121,0.121,null,null,null},
                {"CBD - Prod or Attr End","TAZ.access_density.O = 1 | TAZ.access_density.D = 1",null,null,null,null,null,null,0.5,0.5,null},
                {"CBD Dense Urban - Prod End","TAZ.access_density.O < 3",null,null,null,null,null,null,null,-0.5,null},
                {"CBD Dense Urban - Attr End","TAZ.access_density.D < 3",null,null,null,null,null,null,1.393999,1.524,null},
                {"CBD Dense Urban","TAZ.access_density.O < 3 & TAZ.access_density.D < 3",null,null,null,null,0.89,0.64,null,null,null}}
        }
	
	Section = "Demand|Mode Choice|Utilities|HBSch"
	
        Args.HBSC_Utility = {
            "Type":"array",
            "Caption":"Utility equations for HBSch",
            "Style":"ModeUtilitySB",
            "Value":{
                {"ASC","Constant",null,null,0.884,1.07,2.246,-1.97,0.109206,0.727,0.8,-5},
                {"Insufficient vehicles","Constant","IV",null,null,null,0.508,0.508,0.723,null,null,null},
                {"Zero vehicles","Constant","ZV",-2,null,null,1.61,0.86,3.32,null,1.87,null},
                {"IVTT","SkimRD.da_time",null,-0.0257,null,null,null,null,null,null,null,null},
                {"IVTT","SkimRD.sr_time",null,null,-0.0257,-0.0257,null,null,null,null,null,-0.0257},
                {"IVTT","SkimTW.ivtt",null,null,null,null,null,null,-0.0257,null,null,null},
                {"IVTT","SkimTA.ivtt",null,null,null,null,null,null,null,-0.0257,null,null},
                {"OVTT","TAZ.terminal_time_p.O + TAZ.terminal_time_a.D",null,-0.0772,-0.0772,-0.0772,null,null,null,null,null,null},
                {"OVTT","TAZ.rs_wait_time.O",null,null,null,null,null,null,null,null,null,-0.0772},
                {"OVTT","SkimNM.dist / {WLK_MPM}",null,null,null,null,-0.0772,null,null,null,null,null},
                {"OVTT","SkimNM.dist / {BK_MPM}",null,null,null,null,null,-0.0772,null,null,null,null},
                {"OVTT","SkimTW.iwait + SkimTW.xwait + SkimTW.walk",null,null,null,null,null,null,-0.0772,null,null,null},
                {"OVTT","TAZ.terminal_time_p.O",null,null,null,null,null,null,null,-0.0772,null,null},
                {"OVTT","SkimTA.iwait + SkimTA.xwait + SkimTA.walk + SkimTA.dtime",null,null,null,null,null,null,null,-0.0772,null,null},
                {"Cost","SkimRD.da_toll + SkimRD.dist * {AOC} + TAZ.hbsc_pcost.D",null,-0.0784,null,null,null,null,null,null,null,null},
                {"Cost","(SkimRD.sr_toll + TAZ.hbsc_pcost.D) / {S2_OCC} + SkimRD.dist * {AOC}",null,null,-0.0784,null,null,null,null,null,null,null},
                {"Cost","(SkimRD.sr_toll + TAZ.hbsc_pcost.D )/ {S3_OCC} + SkimRD.dist * {AOC}",null,null,null,-0.0784,null,null,null,null,null,null},
                {"Cost","SkimRD.sr_toll + SkimRD.rs_fare",null,null,null,null,null,null,null,null,null,-0.0784},
                {"Cost","SkimTW.fare",null,null,null,null,null,null,-0.0784,null,null,null},
                {"Cost","SkimTA.fare + SkimTA.auto_cost + SkimTA.ddist * {AOC}",null,null,null,null,null,null,null,-0.0784,null,null},
                {"Path","max((SkimTA.ddist / SkimRD.dist) - 0.5, 0)",null,null,null,null,null,null,null,-3,null,null},
                {"Short Distance","max(3 - SkimNM.dist, 0)",null,null,null,null,null,null,-1,null,null,null},
                {"Short Distance","max(20 - SkimRD.dist, 0)",null,null,null,null,null,null,null,-0.1,null,null},
                {"Distance","SkimRD.dist",null,null,null,null,null,null,null,null,-0.0605,null},
                {"IntersectionDensity","TAZ.int_density.D",null,null,null,null,null,null,0.187,0.187,null,null},
                {"IntersectionDensity","TAZ.int_density.O + TAZ.int_density.D",null,null,null,null,null,0.373,null,null,-1.13,null},
                {"Rural","TAZ.access_density.O > 5 | TAZ.access_density.D > 5",null,null,null,null,null,null,null,null,1,null},
                {"CBD Dense Urban","TAZ.access_density.O < 3 & TAZ.access_density.D < 3",null,null,null,null,0.255,0.255,0.25,0.25,null,null},
                {"CBD Dense Urban - Prod End","TAZ.access_density.O < 3",null,null,null,null,null,null,null,-0.5,null,null}}
        }
	
	Section = "Demand|Mode Choice|Utilities|NHBW"
	
        Args.NHBW_Utility = {
            "Type":"array",
            "Caption":"Utility equations for NHBW",
            "Style":"ModeUtilityNHB",
            "Value":{
                {"ASC","Constant",null,null,-2.238,-2.732,-1.415,-4.56,-3.665,-2.25},
                {"IVTT","SkimRD.da_time",null,-0.0258,null,null,null,null,null,null},
                {"IVTT","SkimRD.sr_time",null,null,-0.0258,-0.0258,null,null,null,-0.0258},
                {"IVTT","SkimTW.ivtt",null,null,null,null,null,null,-0.0258,null},
                {"OVTT","TAZ.terminal_time_p.O + TAZ.terminal_time_a.D",null,-0.0774,-0.0774,-0.0774,null,null,null,null},
                {"OVTT","TAZ.rs_wait_time.O",null,null,null,null,null,null,null,-0.0774},
                {"OVTT","SkimNM.dist / {WLK_MPM}",null,null,null,null,-0.0774,null,null,null},
                {"OVTT","SkimNM.dist / {BK_MPM}",null,null,null,null,null,-0.0774,null,null},
                {"OVTT","SkimTW.iwait + SkimTW.xwait + SkimTW.walk",null,null,null,null,null,null,-0.0774,null},
                {"Cost","SkimRD.da_toll + SkimRD.dist * {AOC} + TAZ.nhbw_pcost.D",null,-0.0787,null,null,null,null,null,null},
                {"Cost","(SkimRD.sr_toll + TAZ.nhbw_pcost.D) / {S2_OCC} + SkimRD.dist * {AOC}",null,null,-0.0787,null,null,null,null,null},
                {"Cost","(SkimRD.sr_toll + TAZ.nhbw_pcost.D )/ {S3_OCC} + SkimRD.dist * {AOC}",null,null,null,-0.0787,null,null,null,null},
                {"Cost","SkimRD.sr_toll + SkimRD.rs_fare",null,null,null,null,null,null,null,-0.0787},
                {"Cost","SkimTW.fare",null,null,null,null,null,null,-0.0787,null},
                {"Short Distance","max(3 - SkimNM.dist, 0)",null,null,null,null,null,null,-1,null},
                {"IntersectionDensity","TAZ.int_density.O + TAZ.int_density.D",null,null,null,null,0.379,0.379,0.459,null},
                {"CBD Dense Urban - Prod or Attr End","TAZ.access_density.O = 1 | TAZ.access_density.D = 1",null,null,null,null,null,null,0.5,null}}
        }
	
	Section = "Demand|Mode Choice|Utilities|NHBNW"
	
        Args.NHBNW_Utility = {
            "Type":"array",
            "Caption":"Utility equations for NHBNW",
            "Style":"ModeUtilityNHB",
            "Value":{
                {"ASC","Constant",null,null,-1.25,-1.36,-0.827,-3.96,-2.051999,-2.5},
                {"IVTT","SkimRD.da_time",null,-0.0204,null,null,null,null,null,null},
                {"IVTT","SkimRD.sr_time",null,null,-0.0204,-0.0204,null,null,null,-0.0204},
                {"IVTT","SkimTW.ivtt",null,null,null,null,null,null,-0.0204,null},
                {"OVTT","TAZ.terminal_time_p.O + TAZ.terminal_time_a.D",null,-0.0605,-0.0605,-0.0605,null,null,null,null},
                {"OVTT","TAZ.rs_wait_time.O",null,null,null,null,null,null,null,-0.0605},
                {"OVTT","SkimNM.dist / {WLK_MPM}",null,null,null,null,-0.0605,null,null,null},
                {"OVTT","SkimNM.dist / {BK_MPM}",null,null,null,null,null,-0.0605,null,null},
                {"OVTT","SkimTW.iwait + SkimTW.xwait + SkimTW.walk",null,null,null,null,null,null,-0.0605,null},
                {"Cost","SkimRD.da_toll + SkimRD.dist * {AOC} + TAZ.nhbnw_pcost.D",null,-0.0618,null,null,null,null,null,null},
                {"Cost","(SkimRD.sr_toll + TAZ.nhbnw_pcost.D) / {S2_OCC} + SkimRD.dist * {AOC}",null,null,-0.0618,null,null,null,null,null},
                {"Cost","(SkimRD.sr_toll + TAZ.nhbnw_pcost.D )/ {S3_OCC} + SkimRD.dist * {AOC}",null,null,null,-0.0618,null,null,null,null},
                {"Cost","SkimRD.sr_toll + SkimRD.rs_fare",null,null,null,null,null,null,null,-0.0618},
                {"Cost","SkimTW.fare",null,null,null,null,null,null,-0.0618,null},
                {"Short Distance","max(3 - SkimNM.dist, 0)",null,null,null,null,null,null,-1,null},
                {"IntersectionDensity","TAZ.int_density.O + TAZ.int_density.D",null,null,null,null,0.644,0.644,0.384,null},
                {"CBD Dense Urban - Prod or Attr End","TAZ.access_density.O = 1 | TAZ.access_density.D = 1",null,null,null,null,null,null,0.5,null}}
        }
	
	Section = "Demand|Mode Choice|Utilities|HBU"
	
        Args.HBU_Utility = {
            "Type":"array",
            "Caption":"Utility equations for HBU",
            "Style":"ModeUtility1",
            "Value":{
                {"ASC","Constant",null,0.427,-0.837,-1.47,-0.294799,-3.952,-1.439998,-1.554999,-1.5},
                {"IVTT","SkimRD.da_time",null,-0.02,null,null,null,null,null,null,null},
                {"IVTT","SkimRD.sr_time",null,null,-0.02,-0.02,null,null,null,null,-0.02},
                {"IVTT","SkimTW.ivtt",null,null,null,null,null,null,-0.02,null,null},
                {"IVTT","SkimTA.ivtt",null,null,null,null,null,null,null,-0.02,null},
                {"OVTT","TAZ.terminal_time_p.O + TAZ.terminal_time_a.D",null,-0.0536,-0.0536,-0.0536,null,null,null,null,null},
                {"OVTT","TAZ.rs_wait_time.O",null,null,null,null,null,null,null,null,-0.0536},
                {"OVTT","SkimNM.dist / {WLK_MPM}",null,null,null,null,-0.0536,null,null,null,null},
                {"OVTT","SkimNM.dist / {BK_MPM}",null,null,null,null,null,-0.0536,null,null,null},
                {"OVTT","SkimTW.iwait + SkimTW.xwait + SkimTW.walk",null,null,null,null,null,null,-0.0536,null,null},
                {"OVTT","TAZ.terminal_time_p.O",null,null,null,null,null,null,null,-0.0536,null},
                {"OVTT","SkimTA.iwait + SkimTA.xwait + SkimTA.walk + SkimTA.dtime",null,null,null,null,null,null,null,-0.0536,null},
                {"Cost","SkimRD.da_toll + SkimRD.dist * {AOC} + TAZ.hbu_pcost.D",null,-0.105,null,null,null,null,null,null,null},
                {"Cost","(SkimRD.sr_toll + TAZ.hbu_pcost.D) / {S2_OCC} + SkimRD.dist * {AOC}",null,null,-0.105,null,null,null,null,null,null},
                {"Cost","(SkimRD.sr_toll + TAZ.hbu_pcost.D )/ {S3_OCC} + SkimRD.dist * {AOC}",null,null,null,-0.105,null,null,null,null,null},
                {"Cost","SkimRD.sr_toll + SkimRD.rs_fare",null,null,null,null,null,null,null,null,-0.105},
                {"Cost","SkimTW.fare",null,null,null,null,null,null,-0.105,null,null},
                {"Cost","SkimTA.fare + SkimTA.auto_cost + SkimTA.ddist * {AOC}",null,null,null,null,null,null,null,-0.105,null},
                {"Path","max((SkimTA.ddist / SkimRD.dist) - 0.5, 0)",null,null,null,null,null,null,null,-3,null},
                {"Short Distance","max(3 - SkimNM.dist, 0)",null,null,null,null,null,null,-1,null,null,null},
                {"Short Distance","max(20 - SkimRD.dist, 0)",null,null,null,null,null,null,null,-0.1,null},
                {"CBD Dense Urban - Prod End","TAZ.access_density.O < 3",null,null,null,null,null,null,null,-0.5,null},
                {"CBD Dense Urban - Attr End","TAZ.access_density.D < 3",null,null,null,null,null,null,0.25,0.614,null},
                {"CBD Dense Urban - Prod or Attr End","TAZ.access_density.O = 1 | TAZ.access_density.D = 1",null,null,null,null,null,null,0.5,0.5,null},
                {"CBD Dense Urban","TAZ.access_density.O < 4 & TAZ.access_density.D < 4",null,null,null,null,1.15,1.15,0.876,null,null}}
        }
	
	Section = "Demand|Mode Choice|Utilities|Airport"
	
        Args.Air_resb_Utility = {
            "Type":"array",
            "Caption":"Utility equations for Airport - Resident Business",
            "Style":"ModeUtilityAirportRes",
            "Value":{
                {"ASC","Constant",null,null,-1.0019,-0.2694,-3.6875,-1.8277,1.082},
                {"IVTT","SkimRD.da_time",null,-0.02,null,null,null,null,null},
                {"IVTT","SkimRD.sr_time",null,null,-0.02,null,null,null,-0.02},
                {"IVTT","SkimTW.ivtt",null,null,null,-0.02,null,null,null},
                {"IVTT","SkimTA.ivtt",null,null,null,null,-0.02,null,null},
                {"IVTT","SkimLX.ivtt",null,null,null,null,null,-0.02,null},
                {"OVTT","TAZ.terminal_time_p.O",null,-0.04,-0.04,null,-0.04,-0.04,null},
                {"OVTT","TAZ.rs_wait_time.O",null,null,null,null,null,null,-0.04},
                {"OVTT","SkimTW.iwait + SkimTW.xwait + SkimTW.walk",null,null,null,-0.04,null,null,null},
                {"OVTT","SkimTA.iwait + SkimTA.xwait + SkimTA.walk + SkimTA.dtime",null,null,null,null,-0.04,null,null},
                {"OVTT","SkimLX.iwait + SkimLX.xwait + SkimLX.walk + SkimLX.dtime",null,null,null,null,null,-0.04,null},
                {"DP TermTime","TAZ.cnst.D * {DP_TERM}",null,-0.04,null,null,null,null,null},
                {"RS TermTime","TAZ.cnst.D * {RS_TERM}",null,null,null,null,null,null,-0.04},
                {"Cost","SkimRD.da_toll + SkimRD.dist * {AOC}",null,-0.021,null,null,null,null,null},
                {"Cost","SkimRD.sr_toll + SkimRD.dist * {AOC}",null,null,-0.021,null,null,null,null},
                {"Cost","SkimRD.sr_toll + SkimRD.rs_fare",null,null,null,null,null,null,-0.021},
                {"Cost","SkimTW.fare",null,null,null,-0.021,null,null,null},
                {"Cost","SkimTA.fare + SkimTA.auto_cost + SkimTA.ddist * {AOC}",null,null,null,null,-0.021,null,null},
                {"Cost","SkimLX.fare + SkimLX.auto_cost + SkimLX.ddist * {AOC}",null,null,null,null,null,-0.021,null},
                {"Path","max((SkimTA.ddist / SkimRD.dist) - 0.5, 0)",null,null,null,null,-3,null,null},
                {"Path","max((SkimLX.ddist / SkimRD.dist) - 0.5, 0)",null,null,null,null,null,-3,null},
                {"RideSource Fee","TAZ.cnst.D * {RS_FEE}",null,null,null,null,null,null,-0.021},
                {"Parking Cost","TAZ.cnst.D * {RESB_PARK}",null,-0.021,null,null,null,null,null},
                {"Distance","SkimRD.dist",null,null,-0.0095,null,null,null,null},
                {"CBD Dense Urban","TAZ.access_density.O = 1 | TAZ.access_density.O = 2",null,null,null,null,null,null,1.48}}
        }
        Args.Air_resl_Utility = {
            "Type":"array",
            "Caption":"Utility equations for Airport - Resident Leisure",
            "Style":"ModeUtilityAirportRes",
            "Value":{
                {"ASC","Constant",null,null,-0.74,0.1439,-1.4771,-0.8035,1.0945},
                {"IVTT","SkimRD.da_time",null,-0.02,null,null,null,null,null},
                {"IVTT","SkimRD.sr_time",null,null,-0.02,null,null,null,-0.02},
                {"IVTT","SkimTW.ivtt",null,null,null,-0.02,null,null,null},
                {"IVTT","SkimTA.ivtt",null,null,null,null,-0.02,null,null},
                {"IVTT","SkimLX.ivtt",null,null,null,null,null,-0.02,null},
                {"OVTT","TAZ.terminal_time_p.O",null,-0.04,-0.04,null,-0.04,-0.04,null},
                {"OVTT","TAZ.rs_wait_time.O",null,null,null,null,null,null,-0.04},
                {"OVTT","SkimTW.iwait + SkimTW.xwait + SkimTW.walk",null,null,null,-0.04,null,null,null},
                {"OVTT","SkimTA.iwait + SkimTA.xwait + SkimTA.walk + SkimTA.dtime",null,null,null,null,-0.04,null,null},
                {"OVTT","SkimLX.iwait + SkimLX.xwait + SkimLX.walk + SkimLX.dtime",null,null,null,null,null,-0.04,null},
                {"DP TermTime","TAZ.cnst.D * {DP_TERM}",null,-0.04,null,null,null,null,null},
                {"RS TermTime","TAZ.cnst.D * {RS_TERM}",null,null,null,null,null,null,-0.04},
                {"Cost","SkimRD.da_toll + SkimRD.dist * {AOC}",null,-0.0323,null,null,null,null,null},
                {"Cost","SkimRD.sr_toll + SkimRD.dist * {AOC}",null,null,-0.0323,null,null,null,null},
                {"Cost","SkimRD.sr_toll + SkimRD.rs_fare",null,null,null,null,null,null,-0.0323},
                {"Cost","SkimTW.fare",null,null,null,-0.0323,null,null,null},
                {"Cost","SkimTA.fare + SkimTA.auto_cost + SkimTA.ddist * {AOC}",null,null,null,null,-0.0323,null,null},
                {"Cost","SkimLX.fare + SkimLX.auto_cost + SkimLX.ddist * {AOC}",null,null,null,null,null,-0.0323,null},
                {"Path","max((SkimTA.ddist / SkimRD.dist) - 0.5, 0)",null,null,null,null,-3,null,null},
                {"Path","max((SkimLX.ddist / SkimRD.dist) - 0.5, 0)",null,null,null,null,null,-3,null},
                {"RideSource Fee","TAZ.cnst.D * {RS_FEE}",null,null,null,null,null,null,-0.0323},
                {"Parking Cost","TAZ.cnst.D * {RESL_PARK}",null,-0.0323,null,null,null,null,null},
                {"Transfers","SkimTA.xfer",null,null,null,null,-1.33,null,null},
                {"Distance","SkimRD.dist",null,null,-0.0089,null,null,null,null},
                {"CBD Dense Urban","TAZ.access_density.O = 1 | TAZ.access_density.O = 2",null,null,null,0.587,null,null,0.602}}
        }
        Args.Air_visb_Utility = {
            "Type":"array",
            "Caption":"Utility equations for Airport - Visitor Business",
            "Style":"ModeUtilityAirportVis",
            "Value":{
                {"ASC","Constant",null,null,-1.7981,0.7576,-2.6027,-1.5134,2.8113},
                {"IVTT","SkimRD.da_time",null,-0.03,null,null,null,null,null},
                {"IVTT","SkimRD.sr_time",null,null,-0.03,null,null,null,-0.03},
                {"IVTT","SkimTW.ivtt",null,null,null,-0.03,null,null,null},
                {"IVTT","SkimTA.ivtt",null,null,null,null,-0.03,null,null},
                {"IVTT","SkimLX.ivtt",null,null,null,null,null,-0.03,null},
                {"OVTT","TAZ.terminal_time_p.O",null,-0.0636,-0.0636,null,-0.0636,-0.0636,null},
                {"OVTT","TAZ.rs_wait_time.O",null,null,null,null,null,null,-0.0636},
                {"OVTT","SkimTW.iwait + SkimTW.xwait + SkimTW.walk",null,null,null,-0.0636,null,null,null},
                {"OVTT","SkimTA.iwait + SkimTA.xwait + SkimTA.walk + SkimTA.dtime",null,null,null,null,-0.0636,null,null},
                {"OVTT","SkimLX.iwait + SkimLX.xwait + SkimLX.walk + SkimLX.dtime",null,null,null,null,null,-0.0636,null},
                {"RC TermTime","TAZ.cnst.D * {RC_TERM}",null,-0.0636,null,null,null,null,null},
                {"RS TermTime","TAZ.cnst.D * {RS_TERM}",null,null,null,null,null,null,-0.0636},
                {"Cost","SkimRD.da_toll + SkimRD.dist * {AOC}",null,-0.0315,null,null,null,null,null},
                {"Cost","SkimRD.sr_toll + SkimRD.dist * {AOC}",null,null,-0.0315,null,null,null,null},
                {"Cost","SkimRD.sr_toll + SkimRD.rs_fare",null,null,null,null,null,null,-0.0315},
                {"Cost","SkimTW.fare",null,null,null,-0.0315,null,null,null},
                {"Cost","SkimTA.fare + SkimTA.auto_cost + SkimTA.ddist * {AOC}",null,null,null,null,-0.0315,null,null},
                {"Cost","SkimLX.fare + SkimLX.auto_cost + SkimLX.ddist * {AOC}",null,null,null,null,null,-0.0315,null},
                {"Path","max((SkimTA.ddist / SkimRD.dist) - 0.5, 0)",null,null,null,null,-3,null,null},
                {"Path","max((SkimLX.ddist / SkimRD.dist) - 0.5, 0)",null,null,null,null,null,-3,null},
                {"RideSource Fee","TAZ.cnst.D * {RS_FEE}",null,null,null,null,null,null,-0.0315},
                {"Parking Cost","TAZ.air_vis_pcost.O",null,-0.0315,null,null,null,null,null},
                {"Distance","SkimRD.dist",null,null,-0.0127,null,null,null,null},
                {"CBD Dense Urban","TAZ.access_density.O = 1 | TAZ.access_density.O = 2",null,null,null,null,null,null,1.29}}
        }
        Args.Air_visl_Utility = {
            "Type":"array",
            "Caption":"Utility equations for Airport - Visitor Leisure",
            "Style":"ModeUtilityAirportVis",
            "Value":{
                {"ASC","Constant",null,null,-0.6982,0.2855,-2.3313,-1.243399,1.3753},
                {"IVTT","SkimRD.da_time",null,-0.02,null,null,null,null,null},
                {"IVTT","SkimRD.sr_time",null,null,-0.02,null,null,null,-0.02},
                {"IVTT","SkimTW.ivtt",null,null,null,-0.02,null,null,null},
                {"IVTT","SkimTA.ivtt",null,null,null,null,-0.02,null,null},
                {"IVTT","SkimLX.ivtt",null,null,null,null,null,-0.02,null},
                {"OVTT","TAZ.terminal_time_p.O",null,-0.04,-0.04,null,-0.04,-0.04,null},
                {"OVTT","TAZ.rs_wait_time.O",null,null,null,null,null,null,-0.04},
                {"OVTT","SkimTW.iwait + SkimTW.xwait + SkimTW.walk",null,null,null,-0.04,null,null,null},
                {"OVTT","SkimTA.iwait + SkimTA.xwait + SkimTA.walk + SkimTA.dtime",null,null,null,null,-0.04,null,null},
                {"OVTT","SkimLX.iwait + SkimLX.xwait + SkimLX.walk + SkimLX.dtime",null,null,null,null,null,-0.04,null},
                {"RC TermTime","TAZ.cnst.D * {RC_TERM}",null,-0.04,null,null,null,null,null},
                {"RS TermTime","TAZ.cnst.D * {RS_TERM}",null,null,null,null,null,null,-0.04},
                {"Cost","SkimRD.da_toll + SkimRD.dist * {AOC}",null,-0.0323,null,null,null,null,null},
                {"Cost","SkimRD.sr_toll + SkimRD.dist * {AOC}",null,null,-0.0323,null,null,null,null},
                {"Cost","SkimRD.sr_toll + SkimRD.rs_fare",null,null,null,null,null,null,-0.0323},
                {"Cost","SkimTW.fare",null,null,null,-0.0323,null,null,null},
                {"Cost","SkimTA.fare + SkimTA.auto_cost + SkimTA.ddist * {AOC}",null,null,null,null,-0.0323,null,null},
                {"Cost","SkimLX.fare + SkimLX.auto_cost + SkimLX.ddist * {AOC}",null,null,null,null,null,-0.0323,null},
                {"Path","max((SkimTA.ddist / SkimRD.dist) - 0.5, 0)",null,null,null,null,-3,null,null},
                {"Path","max((SkimLX.ddist / SkimRD.dist) - 0.5, 0)",null,null,null,null,null,-3,null},
                {"RideSource Fee","TAZ.cnst.D * {RS_FEE}",null,null,null,null,null,null,-0.0323},
                {"Parking Cost","TAZ.air_vis_pcost.O",null,-0.0323,null,null,null,null,null},
                {"Distance","SkimRD.dist",null,null,-0.0049,null,null,null,null},
                {"CBD Dense Urban","TAZ.access_density.O = 1 | TAZ.access_density.O = 2",null,null,null,null,null,null,0.528}}
        }
	
	Section = "Demand|Mode Choice|Availabilities"
	
        Args.ModeChoiceAvail = {
            "Type":"array",
            "Caption":"Availabilities for Mode Choice Models",
            "Style":"Availability",
            "Value":{
                {"RS","SkimRD.dist < 999"},
                {"WK","SkimNM.dist <= {WLK_DIST}"},
                {"BK","SkimNM.dist <= {BK_DIST}"}}
        }
	
	Section = "Demand|Time of Day|Household Trips"
	
        Args.[Time of Day Factors - PK] = {
            "Type":"array",
            "Caption":"Peak PA to Time of Day OD",
            "Style":"TOD",
            "Value":{
                {"am-pa","AM Peak, Prod->Attr",0.512,0.294,0.266,0.679,0.19,0.125},
                {"am-ap","AM Peak, Attr->Prod",0.014,0.076,0.073,0.002,0.19,0.125},
                {"pm-pa","PM Peak, Prod->Attr",0.042,0.224,0.363,0.02,0.31,0.375},
                {"pm-ap","PM Peak, Attr->Prod",0.432,0.406,0.298,0.299,0.31,0.375}}
        }
        Args.[Time of Day Factors - NP] = {
            "Type":"array",
            "Caption":"Non-Peak PA to Time of Day OD",
            "Style":"TOD",
            "Value":{
                {"md-pa","Midday, Prod->Attr",0.268,0.395,0.218,0.052,0.485,0.412},
                {"md-ap","Midday, Attr->Prod",0.222,0.375,0.187,0.886,0.485,0.412},
                {"nt-pa","Night, Prod->Attr",0.225,0.063,0.142,0.008,0.015,0.088},
                {"nt-ap","Night, Attr->Prod",0.285,0.167,0.453,0.054,0.015,0.088}}
        }
	
	Section = "Demand|Time of Day|HBU Trips"
	
        Args.hbu_tod_pk = {
            "Type":"array",
            "Caption":"HBU Peak PA to Time of Day OD",
            "Style":"TOD_HBU",
            "Value":{
                {"am-pa","AM Peak, Prod->Attr",0.595},
                {"am-ap","AM Peak, Attr->Prod",0.005},
                {"pm-pa","PM Peak, Prod->Attr",0.112},
                {"pm-ap","PM Peak, Attr->Prod",0.288}}
        }
        Args.hbu_tod_np = {
            "Type":"array",
            "Caption":"HBU Non-Peak PA to Time of Day OD",
            "Style":"TOD_HBU",
            "Value":{
                {"md-pa","Midday, Prod->Attr",0.264},
                {"md-ap","Midday, Attr->Prod",0.478},
                {"nt-pa","Night, Prod->Attr",0.012},
                {"nt-ap","Night, Attr->Prod",0.246}}
        }
	
	Section = "Demand|Time of Day|Airport Trips"
	
        Args.air_tod_pk = {
            "Type":"array",
            "Caption":"Airport Peak PA to Time of Day OD",
            "Style":"TOD_Airport",
            "Value":{
                {"am-pa","AM Peak, Prod->Attr",0.34,0.313,0.211,0.276},
                {"am-ap","AM Peak, Attr->Prod",0.054,0.107,0.121,0.124},
                {"pm-pa","PM Peak, Prod->Attr",0.269,0.273,0.386,0.301},
                {"pm-ap","PM Peak, Attr->Prod",0.337,0.307,0.282,0.299}}
        }
        Args.air_tod_np = {
            "Type":"array",
            "Caption":"Airport Non-Peak PA to Time of Day OD",
            "Style":"TOD_Airport",
            "Value":{
                {"md-pa","Midday, Prod->Attr",0.216,0.206,0.301,0.315},
                {"md-ap","Midday, Attr->Prod",0.142,0.168,0.307,0.28},
                {"nt-pa","Night, Prod->Attr",0.284,0.344,0.152,0.189},
                {"nt-ap","Night, Attr->Prod",0.358,0.282,0.24,0.216}}
        }
	
	Section = "Demand|Time of Day|Other Trips"
	
        Args.[Time of Day Factors - Daily] = {
            "Type":"array",
            "Caption":"Daily PA to OD for Truck and External Trips",
            "Style":"TOD_Daily",
            "Value":{
                {"am-pa","AM Peak, Prod->Attr",0.009,0.009,0.088,0.114},
                {"am-ap","AM Peak, Attr->Prod",0.009,0.009,0.088,0.114},
                {"md-pa","Midday, Prod->Attr",0.197,0.197,0.207,0.225},
                {"md-ap","Midday, Attr->Prod",0.197,0.197,0.207,0.225},
                {"pm-pa","PM Peak, Prod->Attr",0.185,0.185,0.095,0.042},
                {"pm-ap","PM Peak, Attr->Prod",0.185,0.185,0.095,0.042},
                {"nt-pa","Night, Prod->Attr",0.109,0.109,0.11,0.119},
                {"nt-ap","Night, Attr->Prod",0.109,0.109,0.11,0.119}}
        }
	
	Section = "Supply|Auto Modes"
	
        Args.tt_lk_up = {
            "Type":"File",
            "Caption":"Auto access/egress times",
            "Value":"%InputFolder%\\zonal\\terminal_times_v20221118.csv"
        }
        Args.HH_Occupancies = {
            "Type":"array",
            "Caption":"Auto Occupancies - Household Trips",
            "Style":"OccupancyArrayStyle",
            "Value":{
                {"hbw",2,3.627,1.21},
                {"hbsc",1,2.49,1.6},
                {"hbsr",2,3.627,1.6},
                {"hbpb",2,3.627,1.6},
                {"nhbw",2,3.627,1.21},
                {"nhbnw",2,3.627,1.6},
                {"hbu",2,3.627,1.6}}
        }
        Args.Parking_Factors = {
            "Type":"array",
            "Caption":"Parking Costs",
            "Style":"ParkingCostStyle",
            "Value":{
                {"hbw","cost_mr",0.046},
                {"hbu","cost_dr",1},
                {"hbsc","cost_dr",1},
                {"hbsr","cost_hr",2},
                {"hbpb","cost_hr",1},
                {"nhbw","cost_hr",2},
                {"nhbnw","cost_hr",2},
                {"air_vis","cost_dr",1}}
        }
        Args.[Auto Operating Costs] = {
            "Type":"double",
            "Description":"Auto Operating Costs ($/mile)",
            "Value":0.244
        }
        Args.[RS Min Fare] = {
            "Type":"double",
            "Caption":"Minimum Ride Sourcing Fare",
            "Value":3.39
        }
        Args.[RS Base Fare] = {
            "Type":"double",
            "Caption":"Ride Sourcing Base Fare",
            "Value":3.44
        }
        Args.[RS Dist Fare] = {
            "Type":"double",
            "Caption":"Ride Sourcing Fare per Mile",
            "Value":0.51
        }
        Args.[RS Time Fare] = {
            "Type":"double",
            "Caption":"Ride Sourcing Fare per Minute",
            "Value":0.2
        }
	
	Section = "Supply|Roadway"
	
        Args.[Speed-capacity Filename] = {
            "Type":"File",
            "Value":"%InputFolder%\\params\\ft_urb_vdf_20240104.csv"
        }
        Args.[Number of Assignment Iterations] = {
            "Type":"int",
            "Value":200
        }
        Args.[Relative Gap Threshold] = {
            "Type":"double",
            "Description":"Relative Gap Convergence Threshold",
            "Value":0.0001
        }
        Args.global_turn_pen = {
            "Type":"array",
            "Caption":"Global Turn Penalties",
            "Style":"RealArrayStyle",
            "Value":{
                {"Left",0.09},
                {"Right",0.03},
                {"Through",0.05},
                {"Uturn",-1}}
        }
        Args.[Link Type Penalties] = {
            "Type":"File",
            "Description":"link type specific penalty filename",
            "Value":"%InputFolder%\\params\\linktype_turnpenalties_20230210.bin"
        }
        Args.[Capacity Factors] = {
            "Type":"array",
            "Caption":"Highway Capacity Factors",
            "Style":"CapFactorStyle",
            "Value":{
                {"am",2.835},
                {"md",4.809},
                {"pm",3.774},
                {"nt",5.518}}
        }
        Args.[Assign Classes] = {
            "Type":"array",
            "Caption":"Assignment Class Parameters",
            "Description":"Highway User Class Attributes",
            "Style":"AssignClassStyle",
            "Value":{
                {"da","Drive Alone",1,0.26},
                {"sr","Shared Ride",1,0.26},
                {"lt","Light Truck",1,0.56},
                {"mt","Medium Truck",1.67,0.71},
                {"ht","Heavy Truck",3.75,1.07}}
        }
        Args.[Shoulder Lane Equivalent] = {
            "Type":"double",
            "Description":"Change in number of lanes with allowable shoulder use",
            "Value":0.5
        }
        Args.[Walk Speed] = {
            "Type":"double",
            "Caption":"Walk Speed (mph)",
            "Value":3
        }
        Args.[Bike Speed] = {
            "Type":"double",
            "Caption":"Bike Speed (mph)",
            "Value":12
        }
        Args.[Free Flow Speed] = {
            "Type":"double",
            "Caption":"Free Flow Speed (mph)",
            "Value":25
        }
	
	Section = "Supply|Transit"
	
        Args.[Value Of Time] = {
            "Type":"double",
            "Caption":"Value of Time ($/min)",
            "Value":0.25
        }
        Args.[Transit Fare Table] = {
            "Type":"File",
            "Description":"transit fare filenames",
            "Value":"%InputFolder%\\params\\zonal_fares_20231218.mtx"
        }
        Args.[Transit Transfer Table] = {
            "Type":"File",
            "Description":"transit transfer filenames",
            "Value":"%InputFolder%\\params\\transfer_fare_20231221.bin"
        }
        Args.TransitPath_GlobalWeights = {
            "Type":"array",
            "Caption":"Global Path Weights",
            "Description":"Transit Path Building Weights",
            "Style":"IntShortArrayStyle",
            "Value":{
                {"WalkTimeFactor",3},
                {"Fare",1},
                {"DriveTimeFactor",10}}
        }
        Args.TransitPath_Combination = {
            "Type":"array",
            "Caption":"Transit Combination Parameters",
            "Description":"Transit Path Building Weights",
            "Style":"RealArrayStyle",
            "Value":{
                {"CombinationFactor",1},
                {"WalkFactor",0},
                {"DriveFactor",0.1}}
        }
        Args.TransitPath_ModeWeights = {
            "Type":"array",
            "Caption":"Mode-Level Path Weights (defined in Mode Table)",
            "Description":"Transit Path Building Weights",
            "Style":"StrArrayStyle",
            "Value":{
                {"Time","ivtt_weight"},
                {"Dwelling","ivtt_weight"},
                {"InitialWait","iwait_weight"},
                {"ParkToStopTime","max_pnr_walk"},
                {"TransferWait","xwait_weight"}}
        }
        Args.[Transit Path Penalties] = {
            "Type":"array",
            "Caption":"Transfer Penalties",
            "Style":"IntShortArrayStyle",
            "Value":{
                {"TransferPenalty - walk - pk",12},
                {"TransferPenalty - walk - np",10},
                {"TransferPenalty - auto - pk",18},
                {"TransferPenalty - auto - np",20},
                {"TransferPenalty - lx",99}}
        }
        Args.[Transit Path Thresholds] = {
            "Type":"array",
            "Caption":"Transit Path Thresholds",
            "Style":"IntArrayStyle",
            "Value":{
                {"MaxTripCost",180},
                {"MaxModalTotal",180},
                {"MaxTransfers",6},
                {"MaxInitialWait",60},
                {"MaxTransferWait",45},
                {"MaxAccessWalk",25},
                {"MaxEgressWalk",25},
                {"MaxDriveTime",60},
                {"MaxParkToStopTime",10},
                {"MinParkingCapacity",25}}
        }
        Args.[Transit Speed Factors] = {
            "Type":"double",
            "Description":"Ratio of transit speed / auto speed",
            "Value":1
        }
        Args.transit_pnr_pfe = {
            "Type":"array",
            "Caption":"Transit PnR Constraint Parameters",
            "Style":"RealArrayStyle",
            "Value":{
                {"Alpha",1.5},
                {"Beta",2},
                {"MaxFactor",25},
                {"PnROccupancy",1.2},
                {"RMSE_Threshold",10}}
        }
        Args.PnR_Max_Iteration = {
            "Type":"int",
            "Caption":"Maximum Iterations for PnR Shadow Cost Convergence",
            "Value":16
        }
	
	Section = "Post Process|Air Quality"
	
        Args.[v_c thres] = {
            "Type":"float",
            "Caption":"Volume/Capacity Ratio (v/c) Threshold",
            "Value":"0.75"
        }
        Args.emis_rate_hwy = {
            "Type":"File",
            "Caption":"Highway Emission Rate ",
            "Value":"%InputFolder%\\params\\airquality\\RatePerDistance_y2019_v20230419.csv"
        }
        Args.emis_rate_trn = {
            "Type":"File",
            "Caption":"Transit Emission Rate ",
            "Value":"%InputFolder%\\params\\airquality\\busRate_y2025_v20230419.csv"
        }
        Args.hr_veh_trip = {
            "Type":"File",
            "Caption":"Hourly vehicle trips",
            "Value":"%InputFolder%\\params\\airquality\\northeast-2019_Q4-thursday_vehicle_trips_20230511.csv"
        }
        Args.[Air Quality Fields] = {
            "Type":"string",
            "Caption":"Air Quality Metric Fields",
            "Value":"vmt,vht,cvmt,co,no,so,voc,co2"
        }
        Args.[Selected Air Quality Fields] = {
            "Type":"string",
            "Caption":"Air Quality Metric Fields for EJ Analysis ",
            "Value":"co,no,voc,cvmt"
        }
        Args.emis_hwy_by_link = {
            "Type":"File",
            "Caption":"Highway Emissions by Link ",
            "Value":"%OutputFolder%\\_postproc\\airquality\\emission_highway_link.csv"
        }
        Args.emis_hwy_by_taz = {
            "Type":"File",
            "Caption":"Highway Emissions by TAZ ",
            "Value":"%OutputFolder%\\_postproc\\airquality\\emission_highway_taz.csv"
        }
        Args.emis_hwy_by_mpo = {
            "Type":"string",
            "Caption":"Highway Emissions by MPO (html, xlsx) ",
            "Value":"%OutputFolder%\\_summary\\postproc\\emission_highway_mpo"
        }
        Args.emis_hwy_intra = {
            "Type":"File",
            "Caption":"Intra-Zonal Highway Emissions by TAZ ",
            "Value":"%OutputFolder%\\_postproc\\airquality\\emission_intra_highway.csv"
        }
        Args.emis_trn_by_link = {
            "Type":"File",
            "Caption":"Transit Emissions by Link ",
            "Value":"%OutputFolder%\\_postproc\\airquality\\emission_transit_link.csv"
        }
        Args.emis_trn_by_mode = {
            "Type":"File",
            "Caption":"Transit Emissions by Mode ",
            "Value":"%OutputFolder%\\_postproc\\airquality\\emission_transit_mode.csv"
        }
        Args.[Air Quality Metrics by TAZ] = {
            "Type":"File",
            "Caption":"All-Mode Emissions by TAZ ",
            "Value":"%OutputFolder%\\_postproc\\airquality\\emissions_by_taz.csv"
        }
	
	Section = "Post Process|Equity"
	
        Args.Accessibility_Metrics = {
            "Type":"array",
            "Caption":"Accessibility Metrics for Environmental Justice",
            "Style":"AccessMeasuresStyle",
            "Value":{
                {"jobs_hwy","highway","am",45,"%TAZ Demographic Data%","jobs",0},
                {"jobs_trn","transit","am",45,"%TAZ Demographic Data%","jobs",0},
                {"hedu_hwy","highway","md",25,"%TAZ Demographic Data%","hedu",0},
                {"hedu_trn","transit","md",25,"%TAZ Demographic Data%","hedu",0},
                {"park_hwy","highway","md",45,"%InputFolder%\\zonal\\equity\\open_space_access_points_by_TAZ_v20230424.csv","n",0},
                {"park_trn","transit","md",45,"%InputFolder%\\zonal\\equity\\open_space_access_points_by_TAZ_v20230424.csv","n",0},
                {"hlth_hwy","highway","am",25,"%InputFolder%\\zonal\\equity\\healthcare_facilities_by_TAZ_v20230424.csv","hlth",0},
                {"hlth_trn","transit","am",25,"%InputFolder%\\zonal\\equity\\healthcare_facilities_by_TAZ_v20230424.csv","hlth",0},
                {"espl_hwy","highway","am",25,"%InputFolder%\\zonal\\equity\\essential_place_presence_by_TAZ_v20230424.csv","ep_present",1},
                {"espl_trn","transit","am",25,"%InputFolder%\\zonal\\equity\\essential_place_presence_by_TAZ_v20230424.csv","ep_present",1}}
        }
        Args.[Equity Metrics by TAZ] = {
            "Type":"File",
            "Caption":"Accessibility and Mobility Metrics by TAZ",
            "Value":"%OutputFolder%\\_postproc\\equity\\metrics_by_taz.csv"
        }
        Args.Mobility_Metrics = {
            "Type":"array",
            "Caption":"Mobility Metrics for Environmental Justice (Average travel time)",
            "Style":"MobilityMeasuresStyle",
            "Value":{
                {"avg_time_hwy","highway","am"},
                {"avg_time_trn","transit","am"}}
        }
        Args.[Equity Pop Share Array] = {
            "Type":"array",
            "Caption":"Equity Population Proportion by TAZ",
            "Style":"EqPopShareStyle",
            "Value":{
                {"min_pct","%InputFolder%\\zonal\\equity\\TAZ_minority_v20230424.csv","Minority","Nonminority"},
                {"lowinc_pct","%InputFolder%\\zonal\\equity\\TAZ_lowincome_v20230424.csv","Low-income","Non-low-income"}}
        }
        Args.[Aggregated Metric Values] = {
            "Type":"File",
            "Caption":"Metrics by Population",
            "Value":"%OutputFolder%\\_summary\\postproc\\equity_aggregated.csv"
        }
	
	Section = "Model Segments"
	
        Args.TimePeriods = {
            "Type":"array",
            "Caption":"Model Times of Day",
            "Description":"time periods",
            "Value":
            {"am","md","pm","nt"}
        }
        Args.[Trip Purp] = {
            "Type":"array",
            "Caption":"Household Trip Purposes",
            "Value":
            {"hbw","hbpb","hbsr","hbsc","nhbw","nhbnw"}
        }
        Args.[Purpose Segments] = {
            "Type":"array",
            "Caption":"Vehicle Segments and Modes by Trip Purpose",
            "Style":"AltArrayStyle",
            "Value":{
                {"hbw","da,s2,s3,ta,tw,bk,wk,rs","zv,iv,sv"},
                {"hbsr","da,s2,s3,ta,tw,bk,wk,rs","zv,iv,sv"},
                {"hbpb","da,s2,s3,ta,tw,bk,wk,rs","zv,iv,sv"},
                {"hbsc","da,s2,s3,ta,tw,bk,wk,sb,rs","zv,iv,sv"},
                {"nhbw","da,s2,s3,tw,bk,wk,rs","all"},
                {"nhbnw","da,s2,s3,tw,bk,wk,rs","all"},
                {"hbu","da,s2,s3,ta,tw,bk,wk,rs","all"},
                {"spcgen",null,"hbsr,hbpb"},
                {"air","dp,pu,rc,tw,ta,lx,rs","resb,resl,visb,visl"},
                {"trk","ltrk,mtrk,htrk","all"},
                {"ext","auto,mtrk,htrk","ei,ee,eair"},
                {"ext_ei","auto,mtrk,htrk","all"},
                {"ext_ee","auto,mtrk,htrk","all"},
                {"ext_eair","auto","all"}}
        }
	
	Section = "Model Geography"
	
        Args.[Number of Zones] = {
            "Type":"double",
            "Value":5839
        }
        Args.geo = {
            "Type":"File",
            "Caption":"TAZ shapefile dbf",
            "Value":"%InputFolder%\\zonal\\shp\\CTPS_TDM23_TAZ_2017g_v202303.dbf"
        }
        Args.blk_alloc = {
            "Type":"File",
            "Caption":"Block to TAZ allocation",
            "Value":"%InputFolder%\\zonal\\shp\\taz_2010block_allocation_20230314.csv"
        }
        Args.blk_assign = {
            "Type":"File",
            "Caption":"Block to TAZ assignment",
            "Value":"%InputFolder%\\zonal\\shp\\taz_2010block_assignment_20230314.csv"
        }
        Args.tazpuma = {
            "Type":"File",
            "Caption":"TAZ to PUMA association",
            "Value":"%InputFolder%\\zonal\\shp\\tazpuma.csv"
        }
        Args.[Airport TAZ] = {
            "Type":"int",
            "Description":"TAZ of Airport",
            "Value":185
        }
	
	Section = "Outputs|Reports"
	
        Args.hwy_tod_fields = {
            "Type":"string",
            "Caption":"Highway TOD Fields",
            "Value":"time,speed,flow,vmt,vht,flow_pce,voc,flow_da,flow_sr,flow_ltrk,flow_mtrk,flow_htrk"
        }
        Args.hwy_summary_fields = {
            "Type":"string",
            "Caption":"Highway Summary Fields",
            "Value":"vmt,vht,vol,auto,trk"
        }
        Args.hwy_summary_source = {
            "Type":"array",
            "Caption":"Highway Summary Sources",
            "Style":"HwySummaryStyle",
            "Value":{
                {"vmt","vmt"},
                {"vht","vht"},
                {"vol","flow"},
                {"auto","flow_da,flow_sr,flow_ltrk"},
                {"trk","flow_mtrk,flow_htrk"}}
        }
	
	Section = "Outputs|File References"
	
        Args.Highway = {
            "Type":"File",
            "Description":"highway geodb filename",
            "Value":"%OutputFolder%\\_networks\\LinksNodes.dbd"
        }
        Args.[Highway Network] = {
            "Type":"File",
            "Description":"highway network",
            "Value":"%OutputFolder%\\_networks\\Highway.net"
        }
        Args.Transit = {
            "Type":"File",
            "Description":"transit rts filename",
            "Value":"%OutputFolder%\\_networks\\RoutesStops.rts"
        }
        Args.[Bus Lane Definitions] = {
            "Type":"File",
            "Description":"bus lane links",
            "Value":"%OutputFolder%\\_networks\\bus_lane_settings.bin"
        }
        Args.[HighwaySkims - am] = {
            "Type":"File",
            "Description":"am highway skims",
            "Value":"%OutputFolder%\\_skim\\hwy_am.mtx"
        }
        Args.[HighwaySkims - md] = {
            "Type":"File",
            "Description":"md highway skims",
            "Value":"%OutputFolder%\\_skim\\hwy_md.mtx"
        }
        Args.[TransitWalkSkims - am] = {
            "Type":"File",
            "Description":"am transit-walk skims",
            "Value":"%OutputFolder%\\_skim\\tw_am.mtx"
        }
        Args.[TransitWalkSkims - md] = {
            "Type":"File",
            "Description":"md transit-walk skims",
            "Value":"%OutputFolder%\\_skim\\tw_md.mtx"
        }
        Args.[TransitAutoSkims - am] = {
            "Type":"File",
            "Description":"am transit-auto skims",
            "Value":"%OutputFolder%\\_skim\\ta_am.mtx"
        }
        Args.[TransitAutoSkims - md] = {
            "Type":"File",
            "Description":"md transit-auto skims",
            "Value":"%OutputFolder%\\_skim\\ta_md.mtx"
        }
        Args.[TransitParkUsage - am] = {
            "Type":"File",
            "Value":"%OutputFolder%\\_skim\\pt_park_usage_am.bin"
        }
        Args.[TransitParkUsage - md] = {
            "Type":"File",
            "Value":"%OutputFolder%\\_skim\\pt_park_usage_md.bin"
        }
        Args.NonMotorizedSkim = {
            "Type":"File",
            "Description":"Non-Motorized Skim",
            "Value":"%OutputFolder%\\_skim\\nm_daily.mtx"
        }
        Args.[TAZ Demographic Data] = {
            "Type":"File",
            "Value":"%OutputFolder%\\_networks\\taz_demogr.csv"
        }
        Args.[MC TAZ Data] = {
            "Type":"File",
            "Value":"%OutputFolder%\\_demand\\mc\\taz_data.csv"
        }
        Args.hh_prod = {
            "Type":"File",
            "Caption":"Household Trip Productions",
            "Value":"%OutputFolder%\\_demand\\td\\prod_hh.csv"
        }
        Args.hh_attr = {
            "Type":"File",
            "Caption":"Household Trip Attractions",
            "Value":"%OutputFolder%\\_demand\\td\\attr_hh.csv"
        }
        Args.[Veh Trips - am] = {
            "Type":"File",
            "Description":"am peak vehicle trip tables",
            "Value":"%OutputFolder%\\_demand\\tod\\od_veh_am.mtx"
        }
        Args.[Veh Trips - md] = {
            "Type":"File",
            "Description":"midday vehicle trip tables",
            "Value":"%OutputFolder%\\_demand\\tod\\od_veh_md.mtx"
        }
        Args.[Veh Trips - pm] = {
            "Type":"File",
            "Description":"pm peak vehicle trip tables",
            "Value":"%OutputFolder%\\_demand\\tod\\od_veh_pm.mtx"
        }
        Args.[Veh Trips - nt] = {
            "Type":"File",
            "Description":"night vehicle trip tables",
            "Value":"%OutputFolder%\\_demand\\tod\\od_veh_nt.mtx"
        }
        Args.[Per Trips - am] = {
            "Type":"File",
            "Description":"am peak person trip tables",
            "Value":"%OutputFolder%\\_demand\\tod\\od_per_am.mtx"
        }
        Args.[Per Trips - md] = {
            "Type":"File",
            "Description":"midday person trip tables",
            "Value":"%OutputFolder%\\_demand\\tod\\od_per_md.mtx"
        }
        Args.[Per Trips - pm] = {
            "Type":"File",
            "Description":"pm peak person trip tables",
            "Value":"%OutputFolder%\\_demand\\tod\\od_per_pm.mtx"
        }
        Args.[Per Trips - nt] = {
            "Type":"File",
            "Description":"night person trip tables",
            "Value":"%OutputFolder%\\_demand\\tod\\od_per_nt.mtx"
        }
        Args.[HighwayFlows - am] = {
            "Type":"File",
            "Description":"am highway flow table",
            "Value":"%OutputFolder%\\_assignment\\flows_am.bin"
        }
        Args.[HighwayFlows - md] = {
            "Type":"File",
            "Description":"md highway flow table",
            "Value":"%OutputFolder%\\_assignment\\flows_md.bin"
        }
        Args.[HighwayFlows - pm] = {
            "Type":"File",
            "Description":"pm highway flow table",
            "Value":"%OutputFolder%\\_assignment\\flows_pm.bin"
        }
        Args.[HighwayFlows - nt] = {
            "Type":"File",
            "Description":"nt highway flow table",
            "Value":"%OutputFolder%\\_assignment\\flows_nt.bin"
        }
        Args.[PnR Demand - am] = {
            "Type":"File",
            "Description":"am pnr demand",
            "Value":"%OutputFolder%\\_assignment\\pnr_ta_acc_am.mtx"
        }
        Args.[PnR Demand - md] = {
            "Type":"File",
            "Description":"md pnr demand",
            "Value":"%OutputFolder%\\_assignment\\pnr_ta_acc_md.mtx"
        }
        Args.[PnR Demand - pm] = {
            "Type":"File",
            "Description":"pm pnr demand",
            "Value":"%OutputFolder%\\_assignment\\pnr_ta_acc_pm.mtx"
        }
        Args.[PnR Demand - nt] = {
            "Type":"File",
            "Description":"nt pnr demand",
            "Value":"%OutputFolder%\\_assignment\\pnr_ta_acc_nt.mtx"
        }
        Args.[Highway Net - am] = {
            "Type":"File",
            "Description":"am highway network",
            "Value":"%OutputFolder%\\_networks\\hwy_am.net"
        }
        Args.[Highway Net - md] = {
            "Type":"File",
            "Description":"md highway network",
            "Value":"%OutputFolder%\\_networks\\hwy_md.net"
        }
        Args.[Highway Net - pm] = {
            "Type":"File",
            "Description":"pm highway network",
            "Value":"%OutputFolder%\\_networks\\hwy_pm.net"
        }
        Args.[Highway Net - nt] = {
            "Type":"File",
            "Description":"nt highway network",
            "Value":"%OutputFolder%\\_networks\\hwy_nt.net"
        }
        Args.[Highway AssignLog - am] = {
            "Type":"File",
            "Description":"am assignment log",
            "Value":"%OutputFolder%\\_assignment\\assign_log_am.bin"
        }
        Args.[Highway AssignLog - md] = {
            "Type":"File",
            "Description":"md assignment log",
            "Value":"%OutputFolder%\\_assignment\\assign_log_md.bin"
        }
        Args.[Highway AssignLog - pm] = {
            "Type":"File",
            "Description":"pm assignment log",
            "Value":"%OutputFolder%\\_assignment\\assign_log_pm.bin"
        }
        Args.[Highway AssignLog - nt] = {
            "Type":"File",
            "Description":"nt assignment log",
            "Value":"%OutputFolder%\\_assignment\\assign_log_nt.bin"
        }
        Args.TransitSummaries = {
            "Type":"File",
            "Description":"public transport summaries",
            "Value":"%OutputFolder%\\_summary\\trn\\pt_summaries.bin"
        }
	
	Section = "Config|Files and Folders"
	
        Args.[Base Folder] = {
            "Type":"Folder",
            "Value":"%Model Folder%"
        }
        Args.Scenario = {
            "Type":"hidden",
            "Value":"none"
        }
        Args.InputFolder = {
            "Type":"folder",
            "Value":"%Base Folder%\\inputs"
        }
        Args.OutputFolder = {
            "Type":"folder",
            "Value":"%Base Folder%\\outputs\\"
        }
        Args.out_dir = {
            "Type":"folder",
            "Value":"%OutputFolder%"
        }
        Args.[Config File] = {
            "Type":"File",
            "Description":"config file path",
            "Value":"%OutputFolder%\\config.json"
        }
	
	Section = "Config|Python and Threads"
	
        Args.condaBat = {
            "Type":"File",
            "Description":"Path to conda.bat file in Anaconda installation",
            "Value":"C:\\ProgramData\\Anaconda3\\condabin\\conda.bat"
        }
        Args.condaEvn = {
            "Type":"string",
            "Value":"tdm23_env_1"
        }
        Args.PY = {
            "Type":"hidden",
            "Description":"python object",
            "Value":null
        }
        Args.MatrixThreads = {
            "Type":"int",
            "Description":"Number of threads for matrix operations",
            "Value":4
        }
        Args.AssignThreads = {
            "Type":"int",
            "Description":"Number of threads for assignment, -1 to use default",
            "Value":-1
        }
	
	Section = "Config|Run Options"
	
        Args.loglevel = {
            "Type":"string",
            "Description":"Log Level and Intermediate File Retention",
            "Style":"LogList",
            "Value":"STANDARD"
        }
        Args.[Save Feedback Data] = {
            "Type":"boolean",
            "Description":"Save data from each speed feedback iteration",
            "Value":0
        }
        Args.run_mode = {
            "Type":"string",
            "Caption":"Run Mode",
            "Style":"RunMode",
            "Value":"Full Run"
        }
        Args.vdf_abc_inputs = {
            "Type":"boolean",
            "Caption":"Apply alpha, beta, capacity input values",
            "Description":"Uses values input on network to override lookup",
            "Value":True
        }
        Args.hwy_valid = {
            "Type":"boolean",
            "Caption":"Attach Highway Counts and Calculate Validation Metrics",
            "Value":null
        }
        Args.hwy_cnt = {
            "Type":"file",
            "Caption":"Highway Count File",
            "Value":null
        }
        Args.DryRun = {
            "Type":"boolean",
            "Description":"0: Run model in regular mode, 1: Run in Dryrun where only steps are logged. No models are run.",
            "Value":0
        }
        Args.Iteration = {
            "Type":"int",
            "Description":"starting speed feedback iteration number ",
            "Value":1
        }
        Args.PnR_Iteration = {
            "Type":"int",
            "Description":"starting pnr iteration number",
            "Value":1
        }
        Args.AskToContinue = {
            "Type":"int",
            "Description":"Ask if to continue iterating",
            "Value":0
        }
        Args.[Disable Steps] = {
            "Type":"array",
            "Description":"List of disabled step names for each scenario",
            "Value":null
        }
        Args.RunInIterations = {
            "Type":"array",
            "Description":"Option array listing step names and what iteration they run in each scenario",
            "Value":null
        }
        Args.ExitMessage = {
            "Type":"hidden",
            "Description":"Diagnostic error message.",
            "Value":"OK"
        }
        Args.BatchMode = {
            "Type":"hidden",
            "Description":"Requires TransCAD Batch Macro Environment (TCB)",
            "Value":1
        }
        Args.Exit = {
            "Type":"hidden",
            "Description":"A step can set it to True and the model will stop running.",
            "Value":null
        }
        Args.[Disable Macros] = {
            "Type":"array",
            "Value":null
        }
        Args.rmse_am = {
            "Type":"hidden",
            "Value":0
        }
        Args.rmse_md = {
            "Type":"hidden",
            "Value":0
        }
        Args.prmse_am = {
            "Type":"hidden",
            "Value":0
        }
        Args.prmse_md = {
            "Type":"hidden",
            "Value":0
        }
        Args.rmse_pnr = {
            "Type":"hidden",
            "Value":999
        }
        Args.acc_load = {
            "Type":"boolean",
            "Caption":"Load Transit Access Density and Employment Access Tables",
            "Value":0
        }
        Args.tr_acc_den_load = {
            "Type":"File",
            "Caption":"Premade Transit Access Density Table",
            "Value":null
        }
        Args.emp_acc_load = {
            "Type":"File",
            "Caption":"Premade Employment Access Table",
            "Value":null
        }
	
	Section = "EMAT Scenarios"
	
        Args.[Enable Bus Lanes] = {
            "Type":"boolean",
            "Description":"Enable bus lane feature",
            "Value":True
        }
        Args.[Highway Toll Adjustment] = {
            "Type":"double",
            "Description":"Adjust Highway Tolls",
            "Value":1
        }
        Args.[Transit Fare Adjustment] = {
            "Type":"double",
            "Description":"Adjust Transit Fare",
            "Value":1
        }
        Args.[Transit HRT Time Adjustment] = {
            "Type":"double",
            "Description":"Heavy Rail IVT Factor",
            "Value":1
        }
        Args.[TNC Fare Wait Adjustment] = {
            "Type":"double",
            "Description":"TNC Fare and Wait Adjustment Factor",
            "Value":1
        }
