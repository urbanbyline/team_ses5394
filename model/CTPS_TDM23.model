
/**
  The macro "CTPS_TDM23" holds the definition for the graphical flowchart of this model,
  with steps and links connecting steps.
**/
Macro "CTPS_TDM23" (Args)
Body:
    // model = FlowChart( { StartNodes } , { EndNodes } , Description)
    model = FlowChart({"Initialization"},{"Post Processor"},"TDM23",{Version: 9, BuildNumber: 32775})
    //
    // Nodes
    //
    // FlowChartNode(model,NodeName,MacroName,UI,Description)
    //
    FlowChartNode(model,"Initialization",,,)
    FlowChartNode(model,"Vehicle Availability",,,)
    FlowChartNode(model,"Work from Home",,,)
    FlowChartNode(model,"Trip Generation",,,)
    FlowChartNode(model,"Other Trips",,,)
    FlowChartNode(model,"Skimming",,,)
    FlowChartNode(model,"Trip Distribution",,,)
    FlowChartNode(model,"Mode Choice",,,)
    FlowChartNode(model,"PA to OD",,,)
    FlowChartNode(model,"Highway Assignment",,,)
    FlowChartNode(model,"Transit PnR Assignment",,,)
    FlowChartNode(model,"Feedback",,,)
    FlowChartNode(model,"Final Assignment",,,)
    FlowChartNode(model,"Post Processor",,,)
    //
    // Links
    //
    // FlowChartLink(model , FromNode , ToNode , Condition , Description , IsFeedbackLoop)
    //
    FlowChartLink(model,"Initialization","Vehicle Availability",True,,)
    FlowChartLink(model,"Vehicle Availability","Work from Home",True,,)
    FlowChartLink(model,"Work from Home","Trip Generation",True,,)
    FlowChartLink(model,"Trip Generation","Other Trips",True,,)
    FlowChartLink(model,"Other Trips","Trip Distribution",True,,)
    FlowChartLink(model,"Trip Distribution","Mode Choice",True,,)
    FlowChartLink(model,"Mode Choice","PA to OD",True,,)
    FlowChartLink(model,"PA to OD","Highway Assignment",True,,)
    FlowChartLink(model,"Highway Assignment","Transit PnR Assignment",True,,)
    FlowChartLink(model,"Transit PnR Assignment","Skimming",True,,)
    FlowChartLink(model,"Skimming","Feedback",True,,)
    FlowChartLink(model,"Feedback","Final Assignment",True,,)
    FlowChartLink(model,"Feedback","Trip Distribution",2,,1)
    FlowChartLink(model,"Final Assignment","Post Processor",True,,)
    Return(model)
EndMacro


Macro "Initialization" (Args,Result)
    Attributes = {
        {"Description", "Initialize Networks and Zonal Data"}
    }
Body:
    model = FlowChart({"Model Setup"},{"Roadway VDF"},"Group steps")
    //
    // Nodes
    //
    // FlowChartNode(model,NodeName,MacroName,UI,Description)
    //
    FlowChartNode(model,"Model Setup",,,)
    FlowChartNode(model,"Roadway Init",,,)
    FlowChartNode(model,"Transit Init",,,)
    FlowChartNode(model,"Initial Roadway Skim",,,)
    FlowChartNode(model,"Initial Transit Skim",,,)
    FlowChartNode(model,"Walk Network Build and Skim",,,) 
    FlowChartNode(model,"Zonal Data Init",,,)
    FlowChartNode(model,"Roadway VDF",,,)
    //
    // Links
    //
    // FlowChartLink(model , FromNode , ToNode , Condition , Description , IsFeedbackLoop)
    //
    FlowChartLink(model,"Model Setup","Roadway Init",True,,)
    FlowChartLink(model,"Roadway Init","Transit Init",True,,)
    FlowChartLink(model,"Transit Init","Initial Roadway Skim",True,,)
    FlowChartLink(model,"Initial Roadway Skim","Initial Transit Skim",True,,)
    FlowChartLink(model,"Initial Transit Skim","Walk Network Build and Skim",True,,)
    FlowChartLink(model,"Walk Network Build and Skim","Zonal Data Init",True,,)
    FlowChartLink(model,"Zonal Data Init","Roadway VDF",True,,)

    Return(model)
EndMacro


Macro "Model Setup" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames", {"Model Setup"}}
    }
Data:
    Out({ Args.[Highway] })
    Out({ Args.[Transit] })
EndMacro


Macro "Roadway Init" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames",{"Initialize Highway DBD","Build Highway Network"}}
    }
Data:
    InSections({"Primary Inputs|Networks and Zonal Data"})
    In({ Args.[Init Speeds - am] })
    In({ Args.[Init Speeds - md] })
    Out({ Args.[Highway] })
    Out({ Args.[Highway Net - am] })
    Out({ Args.[Highway Net - md] })
    Out({ Args.[Highway Net - pm] })
    Out({ Args.[Highway Net - nt] })
    Out({ Args.[Bus Lane Definitions] })
EndMacro


Macro "Transit Init" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames",{"Initialize Transit RTS",
                        "Set Transit Link Time",
                        "Set Transit Link Impedance",
                        "Build PK NP Transit Network"}}
    }
Data:
    InSections({"Primary Inputs|Networks and Zonal Data"})
    In({ Args.[Init PnR Demand - am] })
    In({ Args.[Bus Lane Definitions] })
    Out({ Args.[Transit] })
EndMacro


Macro "Initial Roadway Skim" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames", {"Skim Highway AM MD"}},
        {"Text", "Roadway Skim"}
    }
Data:
    In({ Args.[Highway] })
    Out({ Args.[HighwaySkims - am] })
    Out({ Args.[HighwaySkims - md] })
EndMacro


Macro "Initial Transit Skim" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames",{"Skim PK NP Transit Walk",
                        "Skim PK NP Transit Auto",
                        "Skim PK NP Logan Express"}},
                    {"Text", "Transit Skim"}
    }
Data:
    InSections({"Supply|Transit"})
    Out({ Args.[TransitWalkSkims - am] })
    Out({ Args.[TransitWalkSkims - md] })
    Out({ Args.[TransitAutoSkims - am] })
    Out({ Args.[TransitAutoSkims - md] })
EndMacro


Macro "Walk Network Build and Skim" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames",{"Build NonMotorized Network","Skim NonMotorized Network"}}
    }
EndMacro


Macro "Zonal Data Init" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames",{"Initialize and Load SQL DB",
                        "Export Skims to OMX - Init",
                        "Employment Accessibility",
                        "Export Transit Network",
                        "Calculate Stop Service Frequency",
                        "Transit Access Density"}}
    }
Data:
    InSections({"Primary Inputs|Networks and Zonal Data"})
EndMacro


Macro "Report.Zonal Data Init" (Args,Result)
    Attributes = {
        {"MacroName", "ReportZonalDataInit"}
    }
EndMacro


Macro "Roadway VDF" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames",{"Roadway VDF","Build Highway Network"}}
    }
Data:
    In({ Args.[Speed-capacity Filename] })
EndMacro


Macro "Vehicle Availability" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames", {"Vehicle Availability"}}
    }
EndMacro


Macro "Report.Vehicle Availability" (Args,Result)
    Attributes = {
        {"MacroName", "ReportVehicleAvailability"}
    }
EndMacro


Macro "Work from Home" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames", {"Work from Home"}}
    }
EndMacro


Macro "Report.Work from Home" (Args,Result)
    Attributes = {
        {"MacroName", "ReportWorkFromHome"}
    }
EndMacro


Macro "Trip Generation" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames",{"Generate Resident Internal Trips",
                        "Peak NonPeak",
                        "Aggregate and Balance Trips"}}
    }
EndMacro


Macro "Report.Trip Generation" (Args,Result)
    Attributes = {
        {"MacroName", "ReportTripGeneration"}
    }
EndMacro


Macro "Other Trips" (Args,Result)
    Attributes = {
        {"Description", "Other Trips"}
    }
Body:
    model = FlowChart({"University Travel"},{"Commercial Vehicles"},"Group steps")
    //
    // Nodes
    //
    // FlowChartNode(model,NodeName,MacroName,UI,Description)
    //
    FlowChartNode(model,"Commercial Vehicles",,,)    
    FlowChartNode(model,"University Travel",,,)
    FlowChartNode(model,"External Travel",,,)
    FlowChartNode(model,"Special Generators",,,)
    FlowChartNode(model,"Airport Ground Access",,,)
    //
    // Links
    //
    // FlowChartLink(model , FromNode , ToNode , Condition , Description , IsFeedbackLoop)
    //
    FlowChartLink(model,"Commercial Vehicles","External Travel",True,,)
    FlowChartLink(model,"External Travel","Special Generators",True,,)
    FlowChartLink(model,"Special Generators","Airport Ground Access",True,,)
    FlowChartLink(model,"Airport Ground Access","University Travel",True,,)
    Return(model)
EndMacro


Macro "University Travel" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames",{"HBU Trip Generation",
                        "HBU Distribution",
                        "HBU Trip Length Distribution",
                        "HBU Trip Aggregation"}}
    }
EndMacro


Macro "Report.University Travel" (Args,Result)
    Attributes = {
        {"MacroName", "ReportHBU"}
    }
EndMacro


Macro "External Travel" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames",{"External Trip Generation",
                        "External Distribution",
                        "External TOD",
                        "Ext Trip Length Distribution",
                        "Ext Trip Aggregation"}}
    }
EndMacro


Macro "Report.External Travel" (Args,Result)
    Attributes = {
        {"MacroName", "ReportExternalTravel"}
    }
EndMacro


Macro "Special Generators" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames",{"Special Trip Generation",
                        "SpcGen Distribution",
                        "SpcGen Trip Length Distribution"}}
    }
EndMacro


Macro "Report.Special Generators" (Args,Result)
    Attributes = {
        {"MacroName", "ReportSpecialGenerators"}
    }
EndMacro


Macro "Airport Ground Access" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames",{"Airport Trip Generation",
                        "Airport Distribution",
                        "AGA Trip Aggregation",
                        "AGA Trip Length Distribution"}}
    }
EndMacro


Macro "Report.Airport Ground Access" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroName", "ReportAirportGroundAccess"}
    }
EndMacro


Macro "Commercial Vehicles" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames",{"Truck Trip Generation",
                        "Truck Distribution",
                        "Truck TOD",
                        "Truck Trip Aggregation",
                        "Truck Trip Length Distribution"}}
    }
EndMacro


Macro "Report.Commercial Vehicles" (Args,Result)
    Attributes = {
        {"MacroName", "ReportCommercialVehicles"}
    }
EndMacro


Macro "Trip Distribution" (Args,Result)
    Attributes = {
        {"Description", "Trip Distribution"}
    }
Body:
    model = FlowChart({"Compute Logsums"},{"Assemble and Summary"},"Group steps")
    //
    // Nodes
    //
    // FlowChartNode(model,NodeName,MacroName,UI,Description)
    //
    FlowChartNode(model,"Compute Logsums",,,)
    FlowChartNode(model,"Household Distribution",,,)
    FlowChartNode(model,"Assemble and Summary",,,)
   //
    // Links
    //
    // FlowChartLink(model , FromNode , ToNode , Condition , Description , IsFeedbackLoop)
    //
    FlowChartLink(model,"Compute Logsums","Household Distribution",True,,)
    FlowChartLink(model,"Household Distribution","Assemble and Summary",True,,)
    Return(model)
EndMacro


Macro "Report.Trip Distribution" (Args,Result)
    Attributes = {
        {"MacroName", "ReportTripDistribution"}
    }
EndMacro


Macro "Compute Logsums" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames",{"Prepare Mode Choice Inputs","Mode Choice Logsums"}}
    }
EndMacro


Macro "Household Distribution" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames",{"Prepare Distribution Inputs","Household Distribution"}}
    }
EndMacro


Macro "Assemble and Summary" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames",{"Assemble Trips for MC",
                        "Combine SpcGen Trips",
                        "Build Combined Table for Reports",
                        "Household Trip Aggregation",
                        "Household Trip Length Distribution",
                        "HBW Income Geographic Distribution"}}
    }
EndMacro


Macro "Mode Choice" (Args,Result)
    Attributes = {
        {"Description", "Mode Choice"}
    }
Body:
    model = FlowChart({"Average Weekday MC"},{"Airport Ground Access MC"},"Group steps")
    //
    // Nodes
    //
    // FlowChartNode(model,NodeName,MacroName,UI,Description)
    //
    FlowChartNode(model,"Average Weekday MC",,,)
    FlowChartNode(model,"University MC",,,)
    FlowChartNode(model,"Airport Ground Access MC",,,)
   //
    // Links
    //
    // FlowChartLink(model , FromNode , ToNode , Condition , Description , IsFeedbackLoop)
    //
    FlowChartLink(model,"Average Weekday MC","University MC",True,,)
    FlowChartLink(model,"University MC","Airport Ground Access MC",True,,)
    Return(model)
EndMacro


Macro "Report.Mode Choice" (Args,Result)
    Attributes = {
        {"MacroName", "ReportModeChoice"}
    }
EndMacro


Macro "Average Weekday MC" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames",{"Household Mode Choice","Household Mode Summaries"}}
    }
EndMacro


Macro "University MC" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames",{"HBU Mode Shares",
                        "HBU Mode Choice",
                        "HBU Mode Summaries"}}
    }
EndMacro


Macro "Airport Ground Access MC" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames",{"Airport Mode Shares",
                        "Airport Mode Choice",
                        "AGA Mode Summaries"}}
    }
EndMacro


Macro "PA to OD" (Args,Result)
    Attributes = {
        {"Description", "Time of Day"}
    }
Body:
    model = FlowChart({"Time of Day"},{"Person to Vehicle"},"Group steps")
    //
    // Nodes
    //
    // FlowChartNode(model,NodeName,MacroName,UI,Description)
    //
    FlowChartNode(model,"Time of Day",,,)
    FlowChartNode(model,"Ride-Source Non-Revenue",,,)
    FlowChartNode(model,"Person to Vehicle",,,)
   //
    // Links
    //
    // FlowChartLink(model , FromNode , ToNode , Condition , Description , IsFeedbackLoop)
    //
    FlowChartLink(model,"Time of Day","Ride-Source Non-Revenue",True,,)
    FlowChartLink(model,"Ride-Source Non-Revenue","Person to Vehicle",True,,)
    Return(model)
EndMacro


Macro "Time of Day" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames",{"Household TOD",
                        "HBU TOD",
                        "Airport TOD"}}
    }
EndMacro


Macro "Ride-Source Non-Revenue" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames", {"Distribute Non-Revenue Trips"}}
    }
EndMacro


Macro "Report.Ride-Source Non-Revenue" (Args,Result)
    Attributes = {
        {"MacroName", "ReportRideSource"}
    }
EndMacro


Macro "Person to Vehicle" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames",{"Person and Vehicle Trips","Summarize TOD"}}
    }
Data:
    Out({ Args.[Veh Trips - am] })
    Out({ Args.[Veh Trips - md] })
    Out({ Args.[Veh Trips - pm] })
    Out({ Args.[Veh Trips - nt] })
    Out({ Args.[Per Trips - am] })
    Out({ Args.[Per Trips - md] })
    Out({ Args.[Per Trips - pm] })
    Out({ Args.[Per Trips - nt] })
EndMacro


Macro "Report.Person to Vehicle" (Args,Result)
    Attributes = {
        {"MacroName", "ReportTimeofDay"}
    }
EndMacro


Macro "Highway Assignment" (Args,Result)
    Attributes = {
        {"Description", "Assignment for Speed Feedback"}
    }
Body:
    model = FlowChart({"Highway Assignment Start"},{"Highway Assignment End"},"Group steps")
    //
    // Nodes
    //
    // FlowChartNode(model,NodeName,MacroName,UI,Description)
    //
    FlowChartNode(model,"Highway Assignment Start",,,)
    FlowChartNode(model,"AM Highway Assignment",,,)
    FlowChartNode(model,"MD Highway Assignment",,,)
    FlowChartNode(model,"Highway Assignment End",,,)    
   //
    // Links
    //
    // FlowChartLink(model , FromNode , ToNode , Condition , Description , IsFeedbackLoop)
    //
    FlowChartLink(model,"Highway Assignment Start","AM Highway Assignment",True,,)
    FlowChartLink(model,"Highway Assignment Start","MD Highway Assignment",True,,)
    FlowChartLink(model,"AM Highway Assignment","Highway Assignment End",True,,)
    FlowChartLink(model,"MD Highway Assignment","Highway Assignment End",True,,)
    Return(model)
EndMacro


Macro "Report.Highway Assignment" (Args,Result)
    Attributes = {
        {"MacroName", "ReportAMMDHighwayAssignment"}
    }
EndMacro


Macro "Highway Assignment Start" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames", {"Highway Assignment Coordination"}}
    }
EndMacro


Macro "AM Highway Assignment" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames", {"Highway Assignment - AM"}},
        {"RunParallel", 1}
    }
Data:
    In({ Args.[Highway] })
    In({ Args.[Highway Net - am] })
    In({ Args.[Veh Trips - am] })
    Out({ Args.[Highway AssignLog - am] })
    Out({ Args.[HighwayFlows - am] })
    Out({ Args.[rmse_am] })
    Out({ Args.[prmse_am] })
EndMacro


Macro "MD Highway Assignment" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames", {"Highway Assignment - MD"}},
        {"RunParallel", 1}
    }
Data:
    In({ Args.[Highway] })
    In({ Args.[Highway Net - md] })
    In({ Args.[Veh Trips - md] })
    Out({ Args.[Highway AssignLog - md] })
    Out({ Args.[HighwayFlows - md] })
    Out({ Args.[rmse_md] })
    Out({ Args.[prmse_md] })
EndMacro


Macro "Highway Assignment End" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames", {"Highway Assignment Coordination"}}
    }
EndMacro


Macro "Transit PnR Assignment" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames", {"Transit PnR Shadow Costs"}}
    }
EndMacro


Macro "Skimming" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames",{"Update Congested Times - Feedback",
                        "Update Highway Network",
                        "Set Transit Link Impedance",
                        "Build PK NP Transit Network",
                        "Skim Highway AM MD",
                        "Skim PK NP Transit Walk",
                        "Skim PK NP Transit Auto",
                        "Skim PK NP Logan Express"}},
                    {"Text", "Skimming"}
    }
Data:
    Out({ Args.[HighwaySkims - am] })
    Out({ Args.[HighwaySkims - md] })
    Out({ Args.[TransitWalkSkims - am] })
    Out({ Args.[TransitWalkSkims - md] })
    Out({ Args.[TransitAutoSkims - am] })
    Out({ Args.[TransitAutoSkims - md] })
EndMacro


Macro "Feedback" (Args, Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"Height", 35},
        {"MacroNames", {"Check Convergence"}},
        {"Picture", "bmp\\planiteration_v3.bmp"},
        {"PicturePosition", "Center"},
        {"Shape", "Decision"},
        {"Text", " "},
        {"Width", 100}
    }
EndMacro


Macro "Final Assignment" (Args,Result)
    Attributes = {
        {"Description", "Final Assignment after Convergence"}
    }
Body:
    model = FlowChart({"Highway PM NT Assignment"},{"Transit Assignment"},"Group steps")
    //
    // Nodes
    //
    // FlowChartNode(model,NodeName,MacroName,UI,Description)
    //
    FlowChartNode(model,"Highway PM NT Assignment",,,)
    FlowChartNode(model,"Transit Assignment",,,)
    //
    // Links
    //
    // FlowChartLink(model , FromNode , ToNode , Condition , Description , IsFeedbackLoop)
    //
    FlowChartLink(model,"Highway PM NT Assignment","Transit Assignment",True,,)
    Return(model)
EndMacro


Macro "Highway PM NT Assignment" (Args,Result)
    Attributes = {
        {"Description", "Final Highway Assignment"},
        {"Text", "Highway Assignment"}
    }
Body:
    model = FlowChart({"Final Assignment Coordination"},{"Highway Summary"},"Group steps")
    //
    // Nodes
    //
    // FlowChartNode(model,NodeName,MacroName,UI,Description)
    //
    FlowChartNode(model,"Final Assignment Coordination",,,)
    FlowChartNode(model,"PM Highway Assignment",,,)
    FlowChartNode(model,"NT Highway Assignment",,,)
    FlowChartNode(model,"Highway Summary",,,)
   //
    // Links
    //
    // FlowChartLink(model , FromNode , ToNode , Condition , Description , IsFeedbackLoop)
    //
    FlowChartLink(model,"Final Assignment Coordination","PM Highway Assignment",True,,)
    FlowChartLink(model,"Final Assignment Coordination","NT Highway Assignment",True,,)
    FlowChartLink(model,"PM Highway Assignment","Highway Summary",True,,)
    FlowChartLink(model,"NT Highway Assignment","Highway Summary",True,,)
    Return(model)
EndMacro


Macro "Report.Highway PM NT Assignment" (Args,Result)
    Attributes = {
        {"MacroName", "ReportPMNTHighwayAssignment"}
    }
EndMacro


Macro "Final Assignment Coordination" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames", {"Highway Assignment Coordination"}},
        {"Text", "Initialize Assignment"}
    }
EndMacro


Macro "PM Highway Assignment" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames", {"Highway Assignment - PM"}},
        {"RunParallel", 1}
    }
Data:
    In({ Args.[Veh Trips - pm] })
    Out({ Args.[HighwayFlows - pm] })
EndMacro


Macro "NT Highway Assignment" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames", {"Highway Assignment - NT"}},
        {"RunParallel", 1}
    }
Data:
    In({ Args.[Veh Trips - nt] })
    Out({ Args.[HighwayFlows - nt] })
EndMacro


Macro "Highway Summary" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames", {"Highway Summary"}}
    }
EndMacro


Macro "Transit Assignment" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames",{"Update Congested Times - Final",
                        "Set Transit Link Impedance",
                        "Build All Transit Networks",
                        "Transit Auto Access Assignment",
                        "Transit Auto Egress Assignment",
                        "Transit Walk Assignment",
                        "Prepare LX Assignment",
                        "Logan Express Assignment",
                        "Transit Summary"}},
                    {"Text", "Transit Assignment"}
    }
Data:
    In({ Args.[Per Trips - am] })
    In({ Args.[Per Trips - md] })
    In({ Args.[Per Trips - pm] })
    In({ Args.[Per Trips - nt] })
EndMacro


Macro "Report.Transit Assignment" (Args,Result)
    Attributes = {
        {"MacroName", "TransitAssignmentReport"}
    }
EndMacro


Macro "Post Processor" (Args,Result)
    Attributes = {
        {"Description", "Post Processor"}
    }
Body:
    model = FlowChart({"Exports"},{"Air Quality Analysis"},"Group steps")
    //
    // Nodes
    //
    // FlowChartNode(model,NodeName,MacroName,UI,Description)
    //
    FlowChartNode(model,"Exports",,,)    
    FlowChartNode(model,"TD Reports",,,)    
    FlowChartNode(model,"Air Quality Analysis",,,)
    FlowChartNode(model,"Equity Analysis",,,)
   //
    // Links
    //
    // FlowChartLink(model , FromNode , ToNode , Condition , Description , IsFeedbackLoop)
    //
    FlowChartLink(model,"Exports","TD Reports",True,,)
    FlowChartLink(model,"TD Reports","Air Quality Analysis",True,,)
    FlowChartLink(model,"Air Quality Analysis","Equity Analysis",True,,)
    Return(model)
EndMacro


Macro "Air Quality Analysis" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames",{"Get IntraZonalCores",
                        "Transit RouteLinks",
                        "AirQuality Analysis"}}
    }
EndMacro


Macro "Equity Analysis" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames",{"Get Equity Metrics by TAZ","Aggregate Metric Values"}}
    }
EndMacro


Macro "Exports" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames",{"Export TAZ Demographics",
                        "Export Highway Network",
                        "Export Transit Network",
                        "Generate Warm Start Speeds",
                        "Export Skims to OMX",
                        "Export Highway Assignment",
                        "Export Transit Assignment",
                        "Generate Summaries",
                        "Clean Up Intermediate Files"}}
    }
EndMacro


Macro "TD Reports" (Args,Result)
    Attributes = {
        {"Class", {"GISDK"}},
        {"MacroNames",{"HBU Trip Length Distribution",
                        "Ext Trip Length Distribution",
                        "SpcGen Trip Length Distribution",
                        "AGA Trip Length Distribution",
                        "Truck Trip Length Distribution",
                        "Household Trip Length Distribution"}}
    }
EndMacro


Macro "CTPS_TDM23.Pins" (Args)
Body:
   // Do not modify the following line:
   Positions = null
   Return(Positions)
EndMacro

